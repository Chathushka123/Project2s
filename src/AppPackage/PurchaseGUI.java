/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AppPackage;

import static java.lang.Thread.sleep;
import java.math.BigDecimal;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Samson
 */
public class PurchaseGUI extends javax.swing.JFrame {

    /**
     * Creates new form SalesGUI
     */
    int mousepX;
    int mousepY;
    int trc;
    int sri[], tri[];
    double purmediqty, stmediqty, stpurmediqty;
    String sid, pitmid, nxtsid, purmediid;
    String crg[];
    BigDecimal purprice, mediqty, mediprice, price, discount, amount, totalamount, totaldiscount, netamount, bdprz, bddis;    
    
    public PurchaseGUI() {
        
        sid = "";
        pitmid = "";
        nxtsid = "";
        purmediid = "";
        purmediqty = 0.00;
        stpurmediqty = 0.00;
        stmediqty = 0.00;
        amount = new BigDecimal("0");        
        
        initComponents();
        
        currentDate();
        genPurchaseItemId();
        loadTbl();        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel_purchasecreate = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField_purchasecreateid = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField_purchasecreatesupplierid = new javax.swing.JTextField();
        jTextField_purchasecreatemedicineid = new javax.swing.JTextField();
        jTextField_purchasecreatepurchaseunit = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField_purchasecreatepurchaseprice = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField_purchasecreatequantity = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField_purchasecreatedate = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField_purchasecreatesuppliername = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextField_purchasecreatemedicinename = new javax.swing.JTextField();
        jButton_purchasecreatedelete = new javax.swing.JButton();
        jButton_purchasecreateupdate = new javax.swing.JButton();
        jButton_purchasecreatereset = new javax.swing.JButton();
        jButton_purchasecreateadd = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jTextField_purchasecreatenetamount = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextField_purchasecreatetotaldiscount = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jTextField_purchasecreatetotalamount = new javax.swing.JTextField();
        jButton_purchasecreatecancel = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_purchasecreate = new javax.swing.JTable();
        jButton_purchasecreateprint = new javax.swing.JButton();
        jButton_purchasecreatesave = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jTextField_purchasecreateprice = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jTextField_purchasecreatediscount = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jTextField_purchasecreateamount = new javax.swing.JTextField();
        jPanel_purchaseview = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jTextField_purchaseviewenterkey = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_purchaseview = new javax.swing.JTable();
        jButton_purchaseviewdelete = new javax.swing.JButton();
        jLabel_purchaseclose = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(1200, 750));
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(1200, 750));

        jPanel1.setBackground(new java.awt.Color(45, 120, 230));
        jPanel1.setMaximumSize(new java.awt.Dimension(1200, 750));
        jPanel1.setMinimumSize(new java.awt.Dimension(1200, 750));
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel1MouseDragged(evt);
            }
        });
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
        });
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel17.setBackground(new java.awt.Color(45, 120, 230));
        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("PURCHASE INFORMATION");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(421, 30, 360, -1));

        jTabbedPane1.setForeground(new java.awt.Color(50, 50, 50));
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jTabbedPane1.setMaximumSize(new java.awt.Dimension(1180, 670));
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(1180, 670));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(1180, 670));

        jPanel_purchasecreate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jPanel_purchasecreate.setMaximumSize(new java.awt.Dimension(1180, 680));
        jPanel_purchasecreate.setMinimumSize(new java.awt.Dimension(1180, 680));
        jPanel_purchasecreate.setPreferredSize(new java.awt.Dimension(1180, 680));
        jPanel_purchasecreate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel_purchasecreateMouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel2.setText("Purchase ID");

        jTextField_purchasecreateid.setEditable(false);
        jTextField_purchasecreateid.setBackground(new java.awt.Color(250, 250, 250));
        jTextField_purchasecreateid.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_purchasecreateid.setForeground(new java.awt.Color(100, 100, 100));
        jTextField_purchasecreateid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel3.setText("Supplier ID");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel4.setText("Medicine ID");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel5.setText("Purchase unit");

        jTextField_purchasecreatesupplierid.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_purchasecreatesupplierid.setForeground(new java.awt.Color(50, 50, 50));
        jTextField_purchasecreatesupplierid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));
        jTextField_purchasecreatesupplierid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_purchasecreatesupplieridKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_purchasecreatesupplieridKeyReleased(evt);
            }
        });

        jTextField_purchasecreatemedicineid.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_purchasecreatemedicineid.setForeground(new java.awt.Color(50, 50, 50));
        jTextField_purchasecreatemedicineid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));
        jTextField_purchasecreatemedicineid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_purchasecreatemedicineidKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_purchasecreatemedicineidKeyReleased(evt);
            }
        });

        jTextField_purchasecreatepurchaseunit.setEditable(false);
        jTextField_purchasecreatepurchaseunit.setBackground(new java.awt.Color(250, 250, 250));
        jTextField_purchasecreatepurchaseunit.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_purchasecreatepurchaseunit.setForeground(new java.awt.Color(100, 100, 100));
        jTextField_purchasecreatepurchaseunit.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel7.setText("Purchase price");

        jTextField_purchasecreatepurchaseprice.setEditable(false);
        jTextField_purchasecreatepurchaseprice.setBackground(new java.awt.Color(250, 250, 250));
        jTextField_purchasecreatepurchaseprice.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_purchasecreatepurchaseprice.setForeground(new java.awt.Color(100, 100, 100));
        jTextField_purchasecreatepurchaseprice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel8.setText("Quantity");

        jTextField_purchasecreatequantity.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_purchasecreatequantity.setForeground(new java.awt.Color(50, 50, 50));
        jTextField_purchasecreatequantity.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));
        jTextField_purchasecreatequantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_purchasecreatequantityKeyReleased(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel9.setText("Date");

        jTextField_purchasecreatedate.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_purchasecreatedate.setForeground(new java.awt.Color(50, 50, 50));
        jTextField_purchasecreatedate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel10.setText("Supplier name");

        jTextField_purchasecreatesuppliername.setEditable(false);
        jTextField_purchasecreatesuppliername.setBackground(new java.awt.Color(250, 250, 250));
        jTextField_purchasecreatesuppliername.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_purchasecreatesuppliername.setForeground(new java.awt.Color(100, 100, 100));
        jTextField_purchasecreatesuppliername.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel11.setText("Medicine name");

        jTextField_purchasecreatemedicinename.setEditable(false);
        jTextField_purchasecreatemedicinename.setBackground(new java.awt.Color(250, 250, 250));
        jTextField_purchasecreatemedicinename.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_purchasecreatemedicinename.setForeground(new java.awt.Color(100, 100, 100));
        jTextField_purchasecreatemedicinename.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));

        jButton_purchasecreatedelete.setBackground(new java.awt.Color(45, 120, 230));
        jButton_purchasecreatedelete.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jButton_purchasecreatedelete.setForeground(new java.awt.Color(255, 255, 255));
        jButton_purchasecreatedelete.setText("DELETE");
        jButton_purchasecreatedelete.setAlignmentY(0.0F);
        jButton_purchasecreatedelete.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(45, 120, 230), 3)));
        jButton_purchasecreatedelete.setMaximumSize(new java.awt.Dimension(85, 35));
        jButton_purchasecreatedelete.setMinimumSize(new java.awt.Dimension(85, 35));
        jButton_purchasecreatedelete.setPreferredSize(new java.awt.Dimension(85, 35));
        jButton_purchasecreatedelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_purchasecreatedeleteActionPerformed(evt);
            }
        });

        jButton_purchasecreateupdate.setBackground(new java.awt.Color(45, 120, 230));
        jButton_purchasecreateupdate.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jButton_purchasecreateupdate.setForeground(new java.awt.Color(255, 255, 255));
        jButton_purchasecreateupdate.setText("UPDATE");
        jButton_purchasecreateupdate.setAlignmentY(0.0F);
        jButton_purchasecreateupdate.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(45, 120, 230), 3)));
        jButton_purchasecreateupdate.setMaximumSize(new java.awt.Dimension(85, 35));
        jButton_purchasecreateupdate.setMinimumSize(new java.awt.Dimension(85, 35));
        jButton_purchasecreateupdate.setPreferredSize(new java.awt.Dimension(85, 35));
        jButton_purchasecreateupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_purchasecreateupdateActionPerformed(evt);
            }
        });

        jButton_purchasecreatereset.setBackground(new java.awt.Color(45, 120, 230));
        jButton_purchasecreatereset.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jButton_purchasecreatereset.setForeground(new java.awt.Color(255, 255, 255));
        jButton_purchasecreatereset.setText("RESET");
        jButton_purchasecreatereset.setAlignmentY(0.0F);
        jButton_purchasecreatereset.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(45, 120, 230), 3)));
        jButton_purchasecreatereset.setMaximumSize(new java.awt.Dimension(85, 35));
        jButton_purchasecreatereset.setMinimumSize(new java.awt.Dimension(85, 35));
        jButton_purchasecreatereset.setPreferredSize(new java.awt.Dimension(85, 35));
        jButton_purchasecreatereset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_purchasecreateresetActionPerformed(evt);
            }
        });

        jButton_purchasecreateadd.setBackground(new java.awt.Color(45, 120, 230));
        jButton_purchasecreateadd.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jButton_purchasecreateadd.setForeground(new java.awt.Color(255, 255, 255));
        jButton_purchasecreateadd.setText("ADD");
        jButton_purchasecreateadd.setAlignmentY(0.0F);
        jButton_purchasecreateadd.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(45, 120, 230), 3)));
        jButton_purchasecreateadd.setMaximumSize(new java.awt.Dimension(85, 35));
        jButton_purchasecreateadd.setMinimumSize(new java.awt.Dimension(85, 35));
        jButton_purchasecreateadd.setPreferredSize(new java.awt.Dimension(85, 35));
        jButton_purchasecreateadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_purchasecreateaddActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel14.setText("Net amount");

        jTextField_purchasecreatenetamount.setEditable(false);
        jTextField_purchasecreatenetamount.setBackground(new java.awt.Color(250, 250, 250));
        jTextField_purchasecreatenetamount.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_purchasecreatenetamount.setForeground(new java.awt.Color(255, 0, 0));
        jTextField_purchasecreatenetamount.setText("0.00");
        jTextField_purchasecreatenetamount.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel15.setText("Total discount");

        jTextField_purchasecreatetotaldiscount.setEditable(false);
        jTextField_purchasecreatetotaldiscount.setBackground(new java.awt.Color(250, 250, 250));
        jTextField_purchasecreatetotaldiscount.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_purchasecreatetotaldiscount.setForeground(new java.awt.Color(0, 150, 0));
        jTextField_purchasecreatetotaldiscount.setText("0.00");
        jTextField_purchasecreatetotaldiscount.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel16.setText("Total amount");

        jTextField_purchasecreatetotalamount.setEditable(false);
        jTextField_purchasecreatetotalamount.setBackground(new java.awt.Color(250, 250, 250));
        jTextField_purchasecreatetotalamount.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_purchasecreatetotalamount.setForeground(new java.awt.Color(0, 0, 150));
        jTextField_purchasecreatetotalamount.setText("0.00");
        jTextField_purchasecreatetotalamount.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));

        jButton_purchasecreatecancel.setBackground(new java.awt.Color(45, 120, 230));
        jButton_purchasecreatecancel.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jButton_purchasecreatecancel.setForeground(new java.awt.Color(255, 255, 255));
        jButton_purchasecreatecancel.setText("CANCEL");
        jButton_purchasecreatecancel.setAlignmentY(0.0F);
        jButton_purchasecreatecancel.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(45, 120, 230), 3)));
        jButton_purchasecreatecancel.setMaximumSize(new java.awt.Dimension(100, 35));
        jButton_purchasecreatecancel.setMinimumSize(new java.awt.Dimension(100, 35));
        jButton_purchasecreatecancel.setPreferredSize(new java.awt.Dimension(100, 35));
        jButton_purchasecreatecancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_purchasecreatecancelActionPerformed(evt);
            }
        });

        jTable_purchasecreate.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTable_purchasecreate.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SERIAL NO", "MEDICINE ID", "MEDICINE NAME", "UNIT", "RATE", "QUANTITY", "PRICE", "DISCOUNT", "AMOUNT"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_purchasecreate.setSelectionBackground(new java.awt.Color(45, 120, 230));
        jTable_purchasecreate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_purchasecreateMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_purchasecreate);

        jButton_purchasecreateprint.setBackground(new java.awt.Color(45, 120, 230));
        jButton_purchasecreateprint.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jButton_purchasecreateprint.setForeground(new java.awt.Color(255, 255, 255));
        jButton_purchasecreateprint.setText("PRINT");
        jButton_purchasecreateprint.setAlignmentY(0.0F);
        jButton_purchasecreateprint.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(45, 120, 230), 3)));
        jButton_purchasecreateprint.setMaximumSize(new java.awt.Dimension(100, 35));
        jButton_purchasecreateprint.setMinimumSize(new java.awt.Dimension(100, 35));
        jButton_purchasecreateprint.setPreferredSize(new java.awt.Dimension(100, 35));
        jButton_purchasecreateprint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_purchasecreateprintActionPerformed(evt);
            }
        });

        jButton_purchasecreatesave.setBackground(new java.awt.Color(45, 120, 230));
        jButton_purchasecreatesave.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jButton_purchasecreatesave.setForeground(new java.awt.Color(255, 255, 255));
        jButton_purchasecreatesave.setText("SAVE");
        jButton_purchasecreatesave.setAlignmentY(0.0F);
        jButton_purchasecreatesave.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(45, 120, 230), 3)));
        jButton_purchasecreatesave.setMaximumSize(new java.awt.Dimension(100, 35));
        jButton_purchasecreatesave.setMinimumSize(new java.awt.Dimension(100, 35));
        jButton_purchasecreatesave.setPreferredSize(new java.awt.Dimension(100, 35));
        jButton_purchasecreatesave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_purchasecreatesaveActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel18.setText("Price");

        jTextField_purchasecreateprice.setEditable(false);
        jTextField_purchasecreateprice.setBackground(new java.awt.Color(250, 250, 250));
        jTextField_purchasecreateprice.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_purchasecreateprice.setForeground(new java.awt.Color(100, 100, 100));
        jTextField_purchasecreateprice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel19.setText("Discount");

        jTextField_purchasecreatediscount.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_purchasecreatediscount.setForeground(new java.awt.Color(50, 50, 50));
        jTextField_purchasecreatediscount.setText("0.00");
        jTextField_purchasecreatediscount.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));
        jTextField_purchasecreatediscount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_purchasecreatediscountKeyReleased(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel20.setText("Amount");

        jTextField_purchasecreateamount.setEditable(false);
        jTextField_purchasecreateamount.setBackground(new java.awt.Color(250, 250, 250));
        jTextField_purchasecreateamount.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_purchasecreateamount.setForeground(new java.awt.Color(0, 0, 255));
        jTextField_purchasecreateamount.setText("0.00");
        jTextField_purchasecreateamount.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));

        javax.swing.GroupLayout jPanel_purchasecreateLayout = new javax.swing.GroupLayout(jPanel_purchasecreate);
        jPanel_purchasecreate.setLayout(jPanel_purchasecreateLayout);
        jPanel_purchasecreateLayout.setHorizontalGroup(
            jPanel_purchasecreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_purchasecreateLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton_purchasecreatesave, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jButton_purchasecreateprint, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jButton_purchasecreatecancel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_purchasecreateLayout.createSequentialGroup()
                .addGroup(jPanel_purchasecreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel_purchasecreateLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel_purchasecreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel_purchasecreateLayout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField_purchasecreatetotalamount, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel_purchasecreateLayout.createSequentialGroup()
                                .addGroup(jPanel_purchasecreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel18))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel_purchasecreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel_purchasecreateLayout.createSequentialGroup()
                                        .addComponent(jTextField_purchasecreateprice, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel20)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextField_purchasecreateamount, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel_purchasecreateLayout.createSequentialGroup()
                                        .addGroup(jPanel_purchasecreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel_purchasecreateLayout.createSequentialGroup()
                                                .addComponent(jTextField_purchasecreateid, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel9))
                                            .addGroup(jPanel_purchasecreateLayout.createSequentialGroup()
                                                .addGroup(jPanel_purchasecreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jTextField_purchasecreatemedicineid, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                                    .addComponent(jTextField_purchasecreatesupplierid))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(jPanel_purchasecreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING))))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel_purchasecreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(jPanel_purchasecreateLayout.createSequentialGroup()
                                                .addComponent(jLabel8)
                                                .addGap(18, 18, 18)
                                                .addComponent(jTextField_purchasecreatequantity, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jTextField_purchasecreatesuppliername, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                            .addComponent(jTextField_purchasecreatemedicinename, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                            .addComponent(jTextField_purchasecreatedate)))
                                    .addGroup(jPanel_purchasecreateLayout.createSequentialGroup()
                                        .addComponent(jTextField_purchasecreatepurchaseunit, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(79, 79, 79)
                                        .addGroup(jPanel_purchasecreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel_purchasecreateLayout.createSequentialGroup()
                                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jTextField_purchasecreatepurchaseprice, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel_purchasecreateLayout.createSequentialGroup()
                                                .addComponent(jLabel19)
                                                .addGap(18, 18, 18)
                                                .addComponent(jTextField_purchasecreatediscount, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel_purchasecreateLayout.createSequentialGroup()
                                                .addComponent(jLabel15)
                                                .addGap(18, 18, 18)
                                                .addComponent(jTextField_purchasecreatetotaldiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(167, 167, 167)
                                        .addComponent(jLabel14)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextField_purchasecreatenetamount, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(jPanel_purchasecreateLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_purchasecreateadd, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_purchasecreatereset, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_purchasecreateupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_purchasecreatedelete, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30))
            .addGroup(jPanel_purchasecreateLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel_purchasecreateLayout.setVerticalGroup(
            jPanel_purchasecreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_purchasecreateLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel_purchasecreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_purchasecreateid)
                    .addComponent(jLabel9)
                    .addComponent(jTextField_purchasecreatedate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_purchasecreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField_purchasecreatesupplierid)
                    .addComponent(jLabel10)
                    .addComponent(jTextField_purchasecreatesuppliername))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_purchasecreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField_purchasecreatemedicineid)
                    .addComponent(jLabel11)
                    .addComponent(jTextField_purchasecreatemedicinename))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_purchasecreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_purchasecreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jTextField_purchasecreatepurchaseunit)
                        .addComponent(jLabel8)
                        .addComponent(jTextField_purchasecreatequantity))
                    .addGroup(jPanel_purchasecreateLayout.createSequentialGroup()
                        .addGroup(jPanel_purchasecreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_purchasecreatepurchaseprice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(10, 10, 10)
                .addGroup(jPanel_purchasecreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jTextField_purchasecreateprice)
                    .addComponent(jLabel20)
                    .addComponent(jTextField_purchasecreateamount)
                    .addComponent(jLabel19)
                    .addComponent(jTextField_purchasecreatediscount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_purchasecreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_purchasecreatedelete, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_purchasecreateupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_purchasecreatereset, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_purchasecreateadd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel_purchasecreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField_purchasecreatenetamount)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField_purchasecreatetotaldiscount)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField_purchasecreatetotalamount))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel_purchasecreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_purchasecreatecancel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_purchasecreateprint, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_purchasecreatesave, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        jTabbedPane1.addTab("CREATE PURCHASE", jPanel_purchasecreate);

        jPanel_purchaseview.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jPanel_purchaseview.setMaximumSize(new java.awt.Dimension(1180, 680));
        jPanel_purchaseview.setMinimumSize(new java.awt.Dimension(1180, 680));
        jPanel_purchaseview.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel_purchaseviewMouseClicked(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel31.setText("Enter keyword");

        jTextField_purchaseviewenterkey.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_purchaseviewenterkey.setForeground(new java.awt.Color(50, 50, 50));
        jTextField_purchaseviewenterkey.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));
        jTextField_purchaseviewenterkey.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_purchaseviewenterkeyKeyReleased(evt);
            }
        });

        jTable_purchaseview.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTable_purchaseview.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "DATE", "SUPPLIER NAME", "AMOUNT", "DISCOUNT", "NET AMOUNT"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_purchaseview.setSelectionBackground(new java.awt.Color(45, 120, 230));
        jScrollPane2.setViewportView(jTable_purchaseview);

        jButton_purchaseviewdelete.setBackground(new java.awt.Color(45, 120, 230));
        jButton_purchaseviewdelete.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jButton_purchaseviewdelete.setForeground(new java.awt.Color(255, 255, 255));
        jButton_purchaseviewdelete.setText("DELETE");
        jButton_purchaseviewdelete.setAlignmentY(0.0F);
        jButton_purchaseviewdelete.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(45, 120, 230), 3)));
        jButton_purchaseviewdelete.setMaximumSize(new java.awt.Dimension(85, 35));
        jButton_purchaseviewdelete.setMinimumSize(new java.awt.Dimension(85, 35));
        jButton_purchaseviewdelete.setPreferredSize(new java.awt.Dimension(85, 35));
        jButton_purchaseviewdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_purchaseviewdeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_purchaseviewLayout = new javax.swing.GroupLayout(jPanel_purchaseview);
        jPanel_purchaseview.setLayout(jPanel_purchaseviewLayout);
        jPanel_purchaseviewLayout.setHorizontalGroup(
            jPanel_purchaseviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_purchaseviewLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel_purchaseviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel_purchaseviewLayout.createSequentialGroup()
                        .addComponent(jLabel31)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField_purchaseviewenterkey, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 632, Short.MAX_VALUE)
                        .addComponent(jButton_purchaseviewdelete, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30))
        );
        jPanel_purchaseviewLayout.setVerticalGroup(
            jPanel_purchaseviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_purchaseviewLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel_purchaseviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField_purchaseviewenterkey)
                    .addComponent(jButton_purchaseviewdelete, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72))
        );

        jTabbedPane1.addTab("  VIEW PURCHASE  ", jPanel_purchaseview);

        jPanel1.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 1180, 670));

        jLabel_purchaseclose.setFont(new java.awt.Font("Gill Sans MT", 0, 20)); // NOI18N
        jLabel_purchaseclose.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_purchaseclose.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_purchaseclose.setText("X");
        jLabel_purchaseclose.setAlignmentY(0.0F);
        jLabel_purchaseclose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_purchasecloseMouseClicked(evt);
            }
        });
        jPanel1.add(jLabel_purchaseclose, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 0, 40, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setSize(new java.awt.Dimension(1200, 750));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    MysqlConnection mc = new MysqlConnection();
    
    public void genId(){
        //PU0000
        try{
            ResultSet rs = mc.getData("SELECT id FROM purchase ORDER BY id DESC LIMIT 1");
		if(rs.next()){
			String idval = rs.getString("id");
			int ln = idval.length();
			String stxt = idval.substring(0, 2);
			String snum = idval.substring(2, ln);
                        String num = String.format("%0" + snum.length() + "d", Integer.parseInt(snum) + 1);
			sid = stxt + num;
		}
		else{
			sid = "PU0001";
		}
	}
	catch(Exception exc){
		JOptionPane.showMessageDialog(null, exc);
	}
    }
    
    public void setId(){
        int ln = sid.length();
        String stxt = sid.substring(0, 2);
	String snum = sid.substring(2, ln);
	String num = String.format("%0" + snum.length() + "d", Integer.parseInt(snum) + 1);
	nxtsid = stxt + num;
    }
    
    public void genPurchaseItemId(){
        //PI000000
        try{
            ResultSet rs = mc.getData("SELECT id FROM purchase_item ORDER BY id DESC LIMIT 1");
		if(rs.next()){
			String idval = rs.getString("id");
			int ln = idval.length();
			String stxt = idval.substring(0, 2);
			String snum = idval.substring(2, ln);
                        String num = String.format("%0" + snum.length() + "d", Integer.parseInt(snum) + 1);
			pitmid = stxt + num;
		}
		else{
			pitmid = "PI000001";
		}
	}
	catch(Exception exc){
		JOptionPane.showMessageDialog(null, exc);
	}
    }
    
    public void currentDate(){
        Thread currentDate = new Thread(){
            public void run(){
                try{
                    for(;;){
                        Calendar clr = new GregorianCalendar();
                        int year = clr.get(Calendar.YEAR);
                        int month = clr.get(Calendar.MONTH);
                        month++; 
                        int day = clr.get(Calendar.DAY_OF_MONTH);
                        int hour = clr.get(Calendar.HOUR);
                        int minute = clr.get(Calendar.MINUTE);
                        int second = clr.get(Calendar.SECOND);
                        String syear = String.format("%04d", year);
                        String smonth = String.format("%02d", month);
                        String sday = String.format("%02d", day);
                        String shour = String.format("%02d", hour);
                        String sminute = String.format("%02d", minute);
                        String ssecond = String.format("%02d", second);
                        jTextField_purchasecreatedate.setText(syear + "-" + smonth + "-" + sday + " " + shour + ":" + sminute + ":" + ssecond);
                        sleep(1000);
                    }
                }
                catch(Exception exc){
                    exc.printStackTrace();
                }
            }
        };
        currentDate.start();
    }
    
    public void mediPrice(){
        if(!jTextField_purchasecreatepurchaseprice.getText().isEmpty()){
            purprice = new BigDecimal(jTextField_purchasecreatepurchaseprice.getText());
        }
        else{
            mediprice = new BigDecimal("0.00");
        }
        if(!jTextField_purchasecreatequantity.getText().isEmpty()){
            mediqty = new BigDecimal(jTextField_purchasecreatequantity.getText());
        }
        else{
            mediqty = new BigDecimal("0.00");
        }
        mediprice = purprice.multiply(mediqty);
        jTextField_purchasecreateprice.setText(String.format("%.2f", mediprice));
    }    
    
    public void mediAmount(){
        if(!jTextField_purchasecreateprice.getText().isEmpty()){
            price = new BigDecimal(jTextField_purchasecreateprice.getText());
        }
        else{
            price = new BigDecimal("0.00");
        }
        if(!jTextField_purchasecreatediscount.getText().isEmpty()){
            discount = new BigDecimal(jTextField_purchasecreatediscount.getText());
        }
        else{
            discount = new BigDecimal("0.00");
        }
        amount = price.subtract(discount);
        jTextField_purchasecreateamount.setText(String.format("%.2f", amount));
    }
       
    public void totalAmount(){
        int trc = jTable_purchasecreate.getRowCount();
        if(trc > 0){
            bdprz = new BigDecimal("0");
            for(int i = 0; i < trc; i++){
                bdprz = bdprz.add(new BigDecimal(jTable_purchasecreate.getValueAt(i, 6).toString()));
            }
            jTextField_purchasecreatetotalamount.setText(String.format("%.2f", bdprz));
        }
        else{
            jTextField_purchasecreatetotalamount.setText("0.00");
        }
    }
    
    public void totalDiscount(){
        int trc = jTable_purchasecreate.getRowCount();
        if(trc > 0){
            bddis = new BigDecimal("0");
            for(int i = 0; i < trc; i++){
                bddis = bddis.add(new BigDecimal(jTable_purchasecreate.getValueAt(i, 7).toString()));
            }
            jTextField_purchasecreatetotaldiscount.setText(String.format("%.2f", bddis));
        }
        else{
            jTextField_purchasecreatetotaldiscount.setText("0.00");
        }
    }
    
    public void purchaseNetAmount(){
        if(!jTextField_purchasecreatetotalamount.getText().isEmpty()){
            totalamount = new BigDecimal(jTextField_purchasecreatetotalamount.getText());
        }
        else{
            totalamount = new BigDecimal("0.00");
        }
        if(!jTextField_purchasecreatetotaldiscount.getText().isEmpty()){
            totaldiscount = new BigDecimal(jTextField_purchasecreatetotaldiscount.getText());
        }
        else{
            totaldiscount = new BigDecimal("0.00");
        }
        netamount = totalamount.subtract(totaldiscount);
        jTextField_purchasecreatenetamount.setText(String.format("%.2f", netamount));
    }    
    
    public void stockMediQty(String purmediid, double purmediqty){
        try{
            this.purmediid = purmediid;
            this.purmediqty = purmediqty;
            ResultSet rs = mc.getData("SELECT unit_relation, quantity FROM medicine WHERE medicine.id = '"+this.purmediid+"'");
            if(rs.next()){
                stpurmediqty = this.purmediqty * rs.getDouble("unit_relation");
                stmediqty = rs.getDouble("quantity") + stpurmediqty;
            }
            else{
                stmediqty = stpurmediqty;
            }            
        }
        catch(Exception exc){
            exc.printStackTrace();
        }
    }
    
    public void stockMediQtyDeletePurchase(String purmediid, double purmediqty){
        try{
            this.purmediid = purmediid;
            this.purmediqty = purmediqty;
            ResultSet rs = mc.getData("SELECT unit_relation, quantity FROM medicine WHERE medicine.id = '"+this.purmediid+"'");
            if(rs.next()){
                stpurmediqty = this.purmediqty * rs.getDouble("unit_relation");
                stmediqty = rs.getDouble("quantity") - stpurmediqty;
            }
            else{
                stmediqty = stpurmediqty;
            }            
        }
        catch(Exception exc){
            exc.printStackTrace();
        }
    }    
    
    private void jLabel_purchasecloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_purchasecloseMouseClicked
        setVisible(false);
        dispose();
    }//GEN-LAST:event_jLabel_purchasecloseMouseClicked

    private void jPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseDragged
        int kordinatX = evt.getXOnScreen();
        int kordinatY = evt.getYOnScreen();
        this.setLocation(kordinatX - mousepX, kordinatY - mousepY);
        
    }//GEN-LAST:event_jPanel1MouseDragged

    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
        mousepX = evt.getX();
        mousepY = evt.getY();
        
    }//GEN-LAST:event_jPanel1MousePressed

    private void jButton_purchasecreatesaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_purchasecreatesaveActionPerformed
        int trc = jTable_purchasecreate.getRowCount();
        DefaultTableModel dtm = (DefaultTableModel)jTable_purchasecreate.getModel();
        if(trc > 0){
            try{
                genId();
                setId();
                mc.putData("INSERT INTO purchase (id, supplier, amount, discount, net_amount, date) VALUES ('"+sid+"', '"+jTextField_purchasecreatesupplierid.getText()+"', '"+jTextField_purchasecreatetotalamount.getText()+"', '"+jTextField_purchasecreatetotaldiscount.getText()+"', '"+jTextField_purchasecreatenetamount.getText()+"', '"+jTextField_purchasecreatedate.getText()+"')");
                for(int i = 0; i < trc; i++){
                    Statement stmt = MysqlConnection.conn().createStatement();
                    stmt.executeUpdate("INSERT INTO purchase_item (id, purchase, medicine, quantity, price, discount, amount) VALUES ('"+jTable_purchasecreate.getValueAt(i, 0).toString()+"', '"+sid+"', '"+jTable_purchasecreate.getValueAt(i, 1).toString()+"', '"+jTable_purchasecreate.getValueAt(i, 5).toString()+"', '"+jTable_purchasecreate.getValueAt(i, 6).toString()+"', '"+jTable_purchasecreate.getValueAt(i, 7).toString()+"', '"+jTable_purchasecreate.getValueAt(i, 8).toString()+"')");
                    stockMediQty(jTable_purchasecreate.getValueAt(i, 1).toString(), Double.parseDouble(jTable_purchasecreate.getValueAt(i, 5).toString()));
                    stmt.executeUpdate("UPDATE medicine SET quantity = '"+String.format("%.2f", stmediqty)+"' WHERE id = '"+jTable_purchasecreate.getValueAt(i, 1).toString()+"'");
                }
                dtm.setRowCount(0);
                jTextField_purchasecreateid.setText(nxtsid);
                jTextField_purchasecreatesupplierid.setText(null);
                jTextField_purchasecreatesuppliername.setText(null);
                jTextField_purchasecreatemedicineid.setText(null);
                jTextField_purchasecreatemedicinename.setText(null);
                jTextField_purchasecreatepurchaseunit.setText(null);
                jTextField_purchasecreatepurchaseprice.setText(null);
                jTextField_purchasecreatequantity.setText(null);
                jTextField_purchasecreateprice.setText(null);
                jTextField_purchasecreatediscount.setText("0.00");
                jTextField_purchasecreateamount.setText("0.00");
                jTextField_purchasecreatetotalamount.setText("0.00");
                jTextField_purchasecreatetotaldiscount.setText("0.00");
                jTextField_purchasecreatenetamount.setText("0.00");
                JOptionPane.showMessageDialog(null, "DONE!");
            }
            catch(Exception exc){
                exc.printStackTrace();
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "There is NO data to SAVE!");
        }
        DefaultTableModel dtmv = (DefaultTableModel)jTable_purchaseview.getModel();
        dtmv.setRowCount(0);
        loadTbl();
    }//GEN-LAST:event_jButton_purchasecreatesaveActionPerformed

    private void jTextField_purchasecreatesupplieridKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_purchasecreatesupplieridKeyPressed
        jTextField_purchasecreatesuppliername.setText(null);
    }//GEN-LAST:event_jTextField_purchasecreatesupplieridKeyPressed

    private void jTextField_purchasecreatesupplieridKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_purchasecreatesupplieridKeyReleased
        try{
            ResultSet rs = mc.getData("SELECT name FROM supplier WHERE id = '"+jTextField_purchasecreatesupplierid.getText()+"'");
            if(rs.first()){
                jTextField_purchasecreatesuppliername.setText(rs.getString("name"));
            }
	}
	catch(Exception exc){
		JOptionPane.showMessageDialog(null, exc);
	}
    }//GEN-LAST:event_jTextField_purchasecreatesupplieridKeyReleased

    private void jTextField_purchasecreatemedicineidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_purchasecreatemedicineidKeyPressed
        jTextField_purchasecreatemedicinename.setText(null);
        jTextField_purchasecreatepurchaseunit.setText(null);
        jTextField_purchasecreatepurchaseprice.setText(null);
        jTextField_purchasecreatequantity.setText(null);
        jTextField_purchasecreateprice.setText(null);
        jTextField_purchasecreatediscount.setText("0.00");
        jTextField_purchasecreateamount.setText("0.00");
    }//GEN-LAST:event_jTextField_purchasecreatemedicineidKeyPressed

    private void jTextField_purchasecreatemedicineidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_purchasecreatemedicineidKeyReleased
        try{
            ResultSet rs = mc.getData("SELECT name, purchase_unit, purchase_price FROM medicine WHERE id = '"+jTextField_purchasecreatemedicineid.getText()+"'");
            if(rs.first()){
                jTextField_purchasecreatemedicinename.setText(rs.getString("name"));
                jTextField_purchasecreatepurchaseunit.setText(rs.getString("purchase_unit"));
                jTextField_purchasecreatepurchaseprice.setText(rs.getString("purchase_price"));
            }
	}
	catch(Exception exc){
		JOptionPane.showMessageDialog(null, exc);
	}
        
        if(!jTextField_purchasecreatepurchaseprice.getText().isEmpty() && !jTextField_purchasecreatequantity.getText().isEmpty()){
            mediPrice();
            mediAmount();
        }
        /*else{
            totalamount = new BigDecimal("0.00");
        }*/ 
    }//GEN-LAST:event_jTextField_purchasecreatemedicineidKeyReleased

    private void jTextField_purchasecreatequantityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_purchasecreatequantityKeyReleased
        mediPrice();
        mediAmount();
    }//GEN-LAST:event_jTextField_purchasecreatequantityKeyReleased

    private void jTextField_purchasecreatediscountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_purchasecreatediscountKeyReleased
        mediAmount();
    }//GEN-LAST:event_jTextField_purchasecreatediscountKeyReleased

    private void jButton_purchasecreateaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_purchasecreateaddActionPerformed
        if(jTextField_purchasecreatesupplierid.getText().isEmpty() || jTextField_purchasecreatesuppliername.getText().isEmpty() || jTextField_purchasecreatemedicineid.getText().isEmpty() || jTextField_purchasecreatemedicinename.getText().isEmpty() || jTextField_purchasecreatepurchaseunit.getText().isEmpty() || jTextField_purchasecreatepurchaseprice.getText().isEmpty() || jTextField_purchasecreatequantity.getText().isEmpty() || jTextField_purchasecreateprice.getText().isEmpty() || jTextField_purchasecreatediscount.getText().isEmpty() || jTextField_purchasecreateamount.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill all fields!");
        }
        else{
            DefaultTableModel dtm = (DefaultTableModel)jTable_purchasecreate.getModel();
            dtm.addRow(new Object[]{pitmid, jTextField_purchasecreatemedicineid.getText(), jTextField_purchasecreatemedicinename.getText(), jTextField_purchasecreatepurchaseunit.getText(), jTextField_purchasecreatepurchaseprice.getText(), jTextField_purchasecreatequantity.getText(), jTextField_purchasecreateprice.getText(), jTextField_purchasecreatediscount.getText(), jTextField_purchasecreateamount.getText()});
            jTextField_purchasecreatemedicineid.setText(null);
            jTextField_purchasecreatemedicinename.setText(null);
            jTextField_purchasecreatepurchaseunit.setText(null);
            jTextField_purchasecreatepurchaseprice.setText(null);
            jTextField_purchasecreatequantity.setText(null);
            jTextField_purchasecreateprice.setText(null);
            jTextField_purchasecreatediscount.setText("0.00");
            jTextField_purchasecreateamount.setText("0.00");
            
            int ln = pitmid.length();
            String stxt = pitmid.substring(0, 2);
            String snum = pitmid.substring(2, ln);
            String num = String.format("%0" + snum.length() + "d", Integer.parseInt(snum) + 1);
            pitmid = stxt + num;
        }
        totalAmount();
        totalDiscount();
        purchaseNetAmount();
    }//GEN-LAST:event_jButton_purchasecreateaddActionPerformed

    private void jButton_purchasecreateresetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_purchasecreateresetActionPerformed
        jTextField_purchasecreatesupplierid.setText(null);
        jTextField_purchasecreatesuppliername.setText(null);
        jTextField_purchasecreatemedicineid.setText(null);
        jTextField_purchasecreatemedicinename.setText(null);
        jTextField_purchasecreatepurchaseunit.setText(null);
        jTextField_purchasecreatepurchaseprice.setText(null);
        jTextField_purchasecreatequantity.setText(null);
        jTextField_purchasecreateprice.setText(null);
        jTextField_purchasecreatediscount.setText("0.00");
        jTextField_purchasecreateamount.setText("0.00");
    }//GEN-LAST:event_jButton_purchasecreateresetActionPerformed

    private void jButton_purchasecreateupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_purchasecreateupdateActionPerformed
        DefaultTableModel dtm = (DefaultTableModel)jTable_purchasecreate.getModel();
        int sri[] = jTable_purchasecreate.getSelectedRows();
        if(sri.length == 1){
            if(jTextField_purchasecreatesupplierid.getText().isEmpty() || jTextField_purchasecreatesuppliername.getText().isEmpty() || jTextField_purchasecreatemedicineid.getText().isEmpty() || jTextField_purchasecreatemedicinename.getText().isEmpty() || jTextField_purchasecreatepurchaseunit.getText().isEmpty() || jTextField_purchasecreatepurchaseprice.getText().isEmpty() || jTextField_purchasecreatequantity.getText().isEmpty() || jTextField_purchasecreateprice.getText().isEmpty() || jTextField_purchasecreatediscount.getText().isEmpty() || jTextField_purchasecreateamount.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Please fill all fields!");
            }
            else{
                dtm.setValueAt(jTextField_purchasecreatemedicineid.getText(), sri[0], 1);
                dtm.setValueAt(jTextField_purchasecreatemedicinename.getText(), sri[0], 2);
                dtm.setValueAt(jTextField_purchasecreatepurchaseunit.getText(), sri[0], 3);
                dtm.setValueAt(jTextField_purchasecreatepurchaseprice.getText(), sri[0], 4);
                dtm.setValueAt(jTextField_purchasecreatequantity.getText(), sri[0], 5);
                dtm.setValueAt(jTextField_purchasecreateprice.getText(), sri[0], 6);
                dtm.setValueAt(jTextField_purchasecreatediscount.getText(), sri[0], 7);
                dtm.setValueAt(jTextField_purchasecreateamount.getText(), sri[0], 8);
                jTextField_purchasecreatemedicineid.setText(null);
                jTextField_purchasecreatemedicinename.setText(null);
                jTextField_purchasecreatepurchaseunit.setText(null);
                jTextField_purchasecreatepurchaseprice.setText(null);
                jTextField_purchasecreatequantity.setText(null);
                jTextField_purchasecreateprice.setText(null);
                jTextField_purchasecreatediscount.setText("0.00");
                jTextField_purchasecreateamount.setText("0.00");
                jTable_purchasecreate.clearSelection();
                jButton_purchasecreateadd.setEnabled(true);
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select the row to update!");
        }        
    totalAmount();
    totalDiscount();
    purchaseNetAmount();
    }//GEN-LAST:event_jButton_purchasecreateupdateActionPerformed

    private void jButton_purchasecreatedeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_purchasecreatedeleteActionPerformed
        DefaultTableModel dtm = (DefaultTableModel)jTable_purchasecreate.getModel();
        int sri[] = jTable_purchasecreate.getSelectedRows();
        if(sri.length > 0){
            for(int i = sri.length - 1; i >= 0; i--){
                    dtm.removeRow(sri[i]);
            }
            jTextField_purchasecreatemedicineid.setText(null);
            jTextField_purchasecreatemedicinename.setText(null);
            jTextField_purchasecreatepurchaseunit.setText(null);
            jTextField_purchasecreatepurchaseprice.setText(null);
            jTextField_purchasecreatequantity.setText(null);
            jTextField_purchasecreateprice.setText(null);
            jTextField_purchasecreatediscount.setText("0.00");
            jTextField_purchasecreateamount.setText("0.00");
            jButton_purchasecreateadd.setEnabled(true);
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select the row to delete!");
        }
        totalAmount();
        totalDiscount();
        purchaseNetAmount();
    }//GEN-LAST:event_jButton_purchasecreatedeleteActionPerformed

    private void jButton_purchasecreateprintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_purchasecreateprintActionPerformed
        int trc = jTable_purchasecreate.getRowCount();
        DefaultTableModel dtm = (DefaultTableModel)jTable_purchasecreate.getModel();
        if(trc > 0){
            try{
                genId();
                setId();
                mc.putData("INSERT INTO purchase (id, supplier, amount, discount, net_amount, date) VALUES ('"+sid+"', '"+jTextField_purchasecreatesupplierid.getText()+"', '"+jTextField_purchasecreatetotalamount.getText()+"', '"+jTextField_purchasecreatetotaldiscount.getText()+"', '"+jTextField_purchasecreatenetamount.getText()+"', '"+jTextField_purchasecreatedate.getText()+"')");
                for(int i = 0; i < trc; i++){
                    Statement stmt = MysqlConnection.conn().createStatement();
                    stmt.executeUpdate("INSERT INTO purchase_item (id, purchase, medicine, quantity, price, discount, amount) VALUES ('"+jTable_purchasecreate.getValueAt(i, 0).toString()+"', '"+sid+"', '"+jTable_purchasecreate.getValueAt(i, 1).toString()+"', '"+jTable_purchasecreate.getValueAt(i, 5).toString()+"', '"+jTable_purchasecreate.getValueAt(i, 6).toString()+"', '"+jTable_purchasecreate.getValueAt(i, 7).toString()+"', '"+jTable_purchasecreate.getValueAt(i, 8).toString()+"')");
                    stockMediQty(jTable_purchasecreate.getValueAt(i, 1).toString(), Double.parseDouble(jTable_purchasecreate.getValueAt(i, 5).toString()));
                    stmt.executeUpdate("UPDATE medicine SET quantity = '"+String.format("%.2f", stmediqty)+"' WHERE id = '"+jTable_purchasecreate.getValueAt(i, 1).toString()+"'");
                }
                dtm.setRowCount(0);
                jTextField_purchasecreateid.setText(nxtsid);
                jTextField_purchasecreatesupplierid.setText(null);
                jTextField_purchasecreatesuppliername.setText(null);
                jTextField_purchasecreatemedicineid.setText(null);
                jTextField_purchasecreatemedicinename.setText(null);
                jTextField_purchasecreatepurchaseunit.setText(null);
                jTextField_purchasecreatepurchaseprice.setText(null);
                jTextField_purchasecreatequantity.setText(null);
                jTextField_purchasecreateprice.setText(null);
                jTextField_purchasecreatediscount.setText("0.00");
                jTextField_purchasecreateamount.setText("0.00");
                jTextField_purchasecreatetotalamount.setText("0.00");
                jTextField_purchasecreatetotaldiscount.setText("0.00");
                jTextField_purchasecreatenetamount.setText("0.00");
                JOptionPane.showMessageDialog(null, "DONE!");
            }
            catch(Exception exc){
                exc.printStackTrace();
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "There is no data to print!");
        }
        DefaultTableModel dtmv = (DefaultTableModel)jTable_purchaseview.getModel();
        dtmv.setRowCount(0);
        loadTbl();
        
        //PRINT
    }//GEN-LAST:event_jButton_purchasecreateprintActionPerformed

    private void jButton_purchasecreatecancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_purchasecreatecancelActionPerformed
                jTextField_purchasecreatesupplierid.setText(null);
                jTextField_purchasecreatesuppliername.setText(null);
                jTextField_purchasecreatemedicineid.setText(null);
                jTextField_purchasecreatemedicinename.setText(null);
                jTextField_purchasecreatepurchaseunit.setText(null);
                jTextField_purchasecreatepurchaseprice.setText(null);
                jTextField_purchasecreatequantity.setText(null);
                jTextField_purchasecreateprice.setText(null);
                jTextField_purchasecreatediscount.setText("0.00");
                jTextField_purchasecreateamount.setText("0.00");
                jTextField_purchasecreatetotalamount.setText("0.00");
                jTextField_purchasecreatetotaldiscount.setText("0.00");
                jTextField_purchasecreatenetamount.setText("0.00");
                DefaultTableModel dtm = (DefaultTableModel)jTable_purchasecreate.getModel();
                dtm.setRowCount(0);
    }//GEN-LAST:event_jButton_purchasecreatecancelActionPerformed

    private void jTextField_purchaseviewenterkeyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_purchaseviewenterkeyKeyReleased
        DefaultTableModel dtmv = (DefaultTableModel)jTable_purchaseview.getModel();
        String search = jTextField_purchaseviewenterkey.getText();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<DefaultTableModel>(dtmv);
        jTable_purchaseview.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_jTextField_purchaseviewenterkeyKeyReleased

    private void jPanel_purchaseviewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel_purchaseviewMouseClicked
        jTable_purchaseview.clearSelection();
    }//GEN-LAST:event_jPanel_purchaseviewMouseClicked

    private void jButton_purchaseviewdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_purchaseviewdeleteActionPerformed
        int sri[] = jTable_purchaseview.getSelectedRows();
        String sri_id[] = new String[sri.length];
        DefaultTableModel dtm = (DefaultTableModel)jTable_purchaseview.getModel();
        if(sri.length > 0){
            try{
                for(int i = sri.length - 1; i >= 0; i--){
                    sri_id[i] = jTable_purchaseview.getModel().getValueAt(sri[i], 0).toString();
                    Statement stmt = MysqlConnection.conn().createStatement();
                    ResultSet rs = stmt.executeQuery("SELECT purchase_item.medicine, purchase_item.quantity FROM purchase_item WHERE purchase_item.purchase = '"+sri_id[i]+"'");
                    while(rs.next()){
                        stockMediQtyDeletePurchase(rs.getString("purchase_item.medicine"), Double.parseDouble(rs.getString("purchase_item.quantity")));
                        stmt.executeUpdate("UPDATE medicine SET quantity = '"+String.format("%.2f", stmediqty)+"' WHERE id = '"+rs.getString("purchase_item.medicine")+"'");                        
                    }
                    stmt.executeUpdate("DELETE FROM purchase_item WHERE purchase_item.purchase = '"+sri_id[i]+"'");
                    stmt.executeUpdate("DELETE FROM purchase WHERE purchase.id = '"+sri_id[i]+"'");
                    dtm.removeRow(sri[i]);
                }
                dtm.setRowCount(0);
                loadTbl();
                JOptionPane.showMessageDialog(null, "Data deleted successfully!");
            }
            catch(Exception exc){
                exc.printStackTrace();
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select the row to delete data!");
        }
    }//GEN-LAST:event_jButton_purchaseviewdeleteActionPerformed

    private void jTable_purchasecreateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_purchasecreateMouseClicked
        DefaultTableModel dtm = (DefaultTableModel)jTable_purchasecreate.getModel();
        int sri[] = jTable_purchasecreate.getSelectedRows();
        if(sri.length == 1){
            jButton_purchasecreateadd.setEnabled(false);
            jTextField_purchasecreatemedicineid.setText(dtm.getValueAt(sri[0], 1).toString());
            jTextField_purchasecreatemedicinename.setText(dtm.getValueAt(sri[0], 2).toString());
            jTextField_purchasecreatepurchaseunit.setText(dtm.getValueAt(sri[0], 3).toString());
            jTextField_purchasecreatepurchaseprice.setText(dtm.getValueAt(sri[0], 4).toString());
            jTextField_purchasecreatequantity.setText(dtm.getValueAt(sri[0], 5).toString());
            jTextField_purchasecreateprice.setText(dtm.getValueAt(sri[0], 6).toString());
            jTextField_purchasecreatediscount.setText(dtm.getValueAt(sri[0], 7).toString());
            jTextField_purchasecreateamount.setText(dtm.getValueAt(sri[0], 8).toString());
        }
        else{
            jTextField_purchasecreatemedicineid.setText(null);
            jTextField_purchasecreatemedicinename.setText(null);
            jTextField_purchasecreatepurchaseunit.setText(null);
            jTextField_purchasecreatepurchaseprice.setText(null);
            jTextField_purchasecreatequantity.setText("0.00");
            jTextField_purchasecreateprice.setText(null);
            jTextField_purchasecreatediscount.setText("0.00");
            jTextField_purchasecreateamount.setText("0.00");
        }
    }//GEN-LAST:event_jTable_purchasecreateMouseClicked

    private void jPanel_purchasecreateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel_purchasecreateMouseClicked
        jTable_purchasecreate.clearSelection();
            jTextField_purchasecreatemedicineid.setText(null);
            jTextField_purchasecreatemedicinename.setText(null);
            jTextField_purchasecreatepurchaseunit.setText(null);
            jTextField_purchasecreatepurchaseprice.setText(null);
            jTextField_purchasecreatequantity.setText("0.00");
            jTextField_purchasecreateprice.setText(null);
            jTextField_purchasecreatediscount.setText("0.00");
            jTextField_purchasecreateamount.setText("0.00");        
    }//GEN-LAST:event_jPanel_purchasecreateMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PurchaseGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PurchaseGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PurchaseGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PurchaseGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PurchaseGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_purchasecreateadd;
    private javax.swing.JButton jButton_purchasecreatecancel;
    private javax.swing.JButton jButton_purchasecreatedelete;
    private javax.swing.JButton jButton_purchasecreateprint;
    private javax.swing.JButton jButton_purchasecreatereset;
    private javax.swing.JButton jButton_purchasecreatesave;
    private javax.swing.JButton jButton_purchasecreateupdate;
    private javax.swing.JButton jButton_purchaseviewdelete;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_purchaseclose;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel_purchasecreate;
    private javax.swing.JPanel jPanel_purchaseview;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable_purchasecreate;
    private javax.swing.JTable jTable_purchaseview;
    private javax.swing.JTextField jTextField_purchasecreateamount;
    private javax.swing.JTextField jTextField_purchasecreatedate;
    private javax.swing.JTextField jTextField_purchasecreatediscount;
    private javax.swing.JTextField jTextField_purchasecreateid;
    private javax.swing.JTextField jTextField_purchasecreatemedicineid;
    private javax.swing.JTextField jTextField_purchasecreatemedicinename;
    private javax.swing.JTextField jTextField_purchasecreatenetamount;
    private javax.swing.JTextField jTextField_purchasecreateprice;
    private javax.swing.JTextField jTextField_purchasecreatepurchaseprice;
    private javax.swing.JTextField jTextField_purchasecreatepurchaseunit;
    private javax.swing.JTextField jTextField_purchasecreatequantity;
    private javax.swing.JTextField jTextField_purchasecreatesupplierid;
    private javax.swing.JTextField jTextField_purchasecreatesuppliername;
    private javax.swing.JTextField jTextField_purchasecreatetotalamount;
    private javax.swing.JTextField jTextField_purchasecreatetotaldiscount;
    private javax.swing.JTextField jTextField_purchaseviewenterkey;
    // End of variables declaration//GEN-END:variables

    private void loadTbl(){
        try{
            DefaultTableModel dtm = (DefaultTableModel)jTable_purchaseview.getModel();
            ResultSet rs = mc.getData("SELECT purchase.id, supplier.name, purchase.amount, purchase.discount, purchase.net_amount, purchase.date FROM purchase, supplier WHERE purchase.supplier = supplier.id");
            while(rs.next()){
                Vector vtr = new Vector();
                vtr.add(rs.getString("purchase.id"));
                vtr.add(rs.getString("purchase.date"));
                vtr.add(rs.getString("supplier.name"));
                vtr.add(rs.getString("purchase.amount"));
                vtr.add(rs.getString("purchase.discount"));
                vtr.add(rs.getString("purchase.net_amount"));
                dtm.addRow(vtr);
            }
        }
        catch(Exception exc){
            exc.printStackTrace();
        }
    }
}
