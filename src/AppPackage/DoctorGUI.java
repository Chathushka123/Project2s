/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AppPackage;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import java.util.TreeMap;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Row;

/**
 *
 * @author Samson
 */
public class DoctorGUI extends javax.swing.JFrame {

    /**
     * Creates new form SalesGUI
     */
    int mousepX;
    int mousepY;
    String sid, nxtsid, filename;
    String[] data = new String[4];
    
    public DoctorGUI() {
        initComponents();
        
        loadTbl();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel_doctoradd = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField_doctoraddid = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField_doctoraddname = new javax.swing.JTextField();
        jTextField_doctoraddspecializedin = new javax.swing.JTextField();
        jButton_doctoraddreset = new javax.swing.JButton();
        jButton_doctoraddsave = new javax.swing.JButton();
        jLabel34 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField_doctoraddphone = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField_doctoraddemail = new javax.swing.JTextField();
        jButton_doctoraddreset1 = new javax.swing.JButton();
        jPanel_doctorupdate = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jTextField_doctorupdateid = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField_doctorupdatename = new javax.swing.JTextField();
        jTextField_doctorupdatespecializedin = new javax.swing.JTextField();
        jButton_doctorupdatereset = new javax.swing.JButton();
        jButton_doctorupdateupdate = new javax.swing.JButton();
        jLabel38 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jTextField_doctorupdatephone = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jTextField_doctorupdateemail = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jTextField_doctorupdateenterid = new javax.swing.JTextField();
        jButton_doctorupdatefetch = new javax.swing.JButton();
        jPanel_doctorview = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jTextField_doctorviewenterkey = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_doctorview = new javax.swing.JTable();
        jButton_doctorviewdelete = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jButton_doctorviewexport = new javax.swing.JButton();
        jLabel_doctorclose = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(1200, 750));
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(1200, 750));

        jPanel1.setBackground(new java.awt.Color(45, 120, 230));
        jPanel1.setMaximumSize(new java.awt.Dimension(1200, 750));
        jPanel1.setMinimumSize(new java.awt.Dimension(1200, 750));
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel1MouseDragged(evt);
            }
        });
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
        });
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel17.setBackground(new java.awt.Color(45, 120, 230));
        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("DOCTOR INFORMATION");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(431, 30, 340, -1));

        jTabbedPane1.setForeground(new java.awt.Color(50, 50, 50));
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jTabbedPane1.setMaximumSize(new java.awt.Dimension(1180, 670));
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(1180, 670));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(1180, 670));

        jPanel_doctoradd.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jPanel_doctoradd.setMaximumSize(new java.awt.Dimension(1180, 680));
        jPanel_doctoradd.setMinimumSize(new java.awt.Dimension(1180, 680));
        jPanel_doctoradd.setPreferredSize(new java.awt.Dimension(1180, 680));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel2.setText("Doctor ID");

        jTextField_doctoraddid.setEditable(false);
        jTextField_doctoraddid.setBackground(new java.awt.Color(250, 250, 250));
        jTextField_doctoraddid.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_doctoraddid.setForeground(new java.awt.Color(100, 100, 100));
        jTextField_doctoraddid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel3.setText("Doctor name");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel4.setText("Specialized in");

        jTextField_doctoraddname.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_doctoraddname.setForeground(new java.awt.Color(50, 50, 50));
        jTextField_doctoraddname.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));

        jTextField_doctoraddspecializedin.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_doctoraddspecializedin.setForeground(new java.awt.Color(50, 50, 50));
        jTextField_doctoraddspecializedin.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));

        jButton_doctoraddreset.setBackground(new java.awt.Color(45, 120, 230));
        jButton_doctoraddreset.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jButton_doctoraddreset.setForeground(new java.awt.Color(255, 255, 255));
        jButton_doctoraddreset.setText("RESET");
        jButton_doctoraddreset.setAlignmentY(0.0F);
        jButton_doctoraddreset.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(45, 120, 230), 3)));
        jButton_doctoraddreset.setMaximumSize(new java.awt.Dimension(100, 35));
        jButton_doctoraddreset.setMinimumSize(new java.awt.Dimension(100, 35));
        jButton_doctoraddreset.setPreferredSize(new java.awt.Dimension(100, 35));
        jButton_doctoraddreset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_doctoraddresetActionPerformed(evt);
            }
        });

        jButton_doctoraddsave.setBackground(new java.awt.Color(45, 120, 230));
        jButton_doctoraddsave.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jButton_doctoraddsave.setForeground(new java.awt.Color(255, 255, 255));
        jButton_doctoraddsave.setText("SAVE");
        jButton_doctoraddsave.setAlignmentY(0.0F);
        jButton_doctoraddsave.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(45, 120, 230), 3)));
        jButton_doctoraddsave.setMaximumSize(new java.awt.Dimension(100, 35));
        jButton_doctoraddsave.setMinimumSize(new java.awt.Dimension(100, 35));
        jButton_doctoraddsave.setPreferredSize(new java.awt.Dimension(100, 35));
        jButton_doctoraddsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_doctoraddsaveActionPerformed(evt);
            }
        });

        jLabel34.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        jLabel34.setText("Add New Doctor");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel8.setText("Phone number");

        jTextField_doctoraddphone.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_doctoraddphone.setForeground(new java.awt.Color(50, 50, 50));
        jTextField_doctoraddphone.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel9.setText("Email ID");

        jTextField_doctoraddemail.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_doctoraddemail.setForeground(new java.awt.Color(50, 50, 50));
        jTextField_doctoraddemail.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));

        jButton_doctoraddreset1.setBackground(new java.awt.Color(45, 120, 230));
        jButton_doctoraddreset1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jButton_doctoraddreset1.setForeground(new java.awt.Color(255, 255, 255));
        jButton_doctoraddreset1.setText("Import");
        jButton_doctoraddreset1.setAlignmentY(0.0F);
        jButton_doctoraddreset1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(45, 120, 230), 3)));
        jButton_doctoraddreset1.setMaximumSize(new java.awt.Dimension(100, 35));
        jButton_doctoraddreset1.setMinimumSize(new java.awt.Dimension(100, 35));
        jButton_doctoraddreset1.setPreferredSize(new java.awt.Dimension(100, 35));
        jButton_doctoraddreset1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_doctoraddreset1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_doctoraddLayout = new javax.swing.GroupLayout(jPanel_doctoradd);
        jPanel_doctoradd.setLayout(jPanel_doctoraddLayout);
        jPanel_doctoraddLayout.setHorizontalGroup(
            jPanel_doctoraddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_doctoraddLayout.createSequentialGroup()
                .addGroup(jPanel_doctoraddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel_doctoraddLayout.createSequentialGroup()
                        .addGroup(jPanel_doctoraddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel_doctoraddLayout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(jLabel34)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel_doctoraddLayout.createSequentialGroup()
                                .addGap(250, 250, 250)
                                .addGroup(jPanel_doctoraddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel_doctoraddLayout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jTextField_doctoraddemail, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel_doctoraddLayout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jTextField_doctoraddphone, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel_doctoraddLayout.createSequentialGroup()
                                        .addGroup(jPanel_doctoraddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel4))
                                        .addGap(18, 152, Short.MAX_VALUE)
                                        .addGroup(jPanel_doctoraddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextField_doctoraddid, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField_doctoraddname, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField_doctoraddspecializedin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(100, 100, 100)
                        .addComponent(jButton_doctoraddreset1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel_doctoraddLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_doctoraddsave, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(jButton_doctoraddreset, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(50, 50, 50))
        );
        jPanel_doctoraddLayout.setVerticalGroup(
            jPanel_doctoraddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_doctoraddLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel_doctoraddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(jButton_doctoraddreset1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(jPanel_doctoraddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField_doctoraddid))
                .addGap(40, 40, 40)
                .addGroup(jPanel_doctoraddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField_doctoraddname))
                .addGap(40, 40, 40)
                .addGroup(jPanel_doctoraddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField_doctoraddspecializedin))
                .addGap(40, 40, 40)
                .addGroup(jPanel_doctoraddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextField_doctoraddphone))
                .addGap(40, 40, 40)
                .addGroup(jPanel_doctoraddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextField_doctoraddemail))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 117, Short.MAX_VALUE)
                .addGroup(jPanel_doctoraddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_doctoraddreset, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_doctoraddsave, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50))
        );

        jTabbedPane1.addTab("ADD RECORD", jPanel_doctoradd);

        jPanel_doctorupdate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jPanel_doctorupdate.setMaximumSize(new java.awt.Dimension(1180, 680));
        jPanel_doctorupdate.setMinimumSize(new java.awt.Dimension(1180, 680));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel5.setText("Doctor ID");

        jTextField_doctorupdateid.setEditable(false);
        jTextField_doctorupdateid.setBackground(new java.awt.Color(250, 250, 250));
        jTextField_doctorupdateid.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_doctorupdateid.setForeground(new java.awt.Color(100, 100, 100));
        jTextField_doctorupdateid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel6.setText("Doctor name");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel7.setText("Specialized in");

        jTextField_doctorupdatename.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_doctorupdatename.setForeground(new java.awt.Color(50, 50, 50));
        jTextField_doctorupdatename.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));

        jTextField_doctorupdatespecializedin.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_doctorupdatespecializedin.setForeground(new java.awt.Color(50, 50, 50));
        jTextField_doctorupdatespecializedin.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));

        jButton_doctorupdatereset.setBackground(new java.awt.Color(45, 120, 230));
        jButton_doctorupdatereset.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jButton_doctorupdatereset.setForeground(new java.awt.Color(255, 255, 255));
        jButton_doctorupdatereset.setText("RESET");
        jButton_doctorupdatereset.setAlignmentY(0.0F);
        jButton_doctorupdatereset.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(45, 120, 230), 3)));
        jButton_doctorupdatereset.setMaximumSize(new java.awt.Dimension(100, 35));
        jButton_doctorupdatereset.setMinimumSize(new java.awt.Dimension(100, 35));
        jButton_doctorupdatereset.setPreferredSize(new java.awt.Dimension(100, 35));
        jButton_doctorupdatereset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_doctorupdateresetActionPerformed(evt);
            }
        });

        jButton_doctorupdateupdate.setBackground(new java.awt.Color(45, 120, 230));
        jButton_doctorupdateupdate.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jButton_doctorupdateupdate.setForeground(new java.awt.Color(255, 255, 255));
        jButton_doctorupdateupdate.setText("UPDATE");
        jButton_doctorupdateupdate.setAlignmentY(0.0F);
        jButton_doctorupdateupdate.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(45, 120, 230), 3)));
        jButton_doctorupdateupdate.setMaximumSize(new java.awt.Dimension(100, 35));
        jButton_doctorupdateupdate.setMinimumSize(new java.awt.Dimension(100, 35));
        jButton_doctorupdateupdate.setPreferredSize(new java.awt.Dimension(100, 35));
        jButton_doctorupdateupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_doctorupdateupdateActionPerformed(evt);
            }
        });

        jLabel38.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        jLabel38.setText("Update Existing Doctor");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel19.setText("Phone number");

        jTextField_doctorupdatephone.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_doctorupdatephone.setForeground(new java.awt.Color(50, 50, 50));
        jTextField_doctorupdatephone.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel20.setText("Email ID");

        jTextField_doctorupdateemail.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_doctorupdateemail.setForeground(new java.awt.Color(50, 50, 50));
        jTextField_doctorupdateemail.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel21.setText("Enter ID");

        jTextField_doctorupdateenterid.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_doctorupdateenterid.setForeground(new java.awt.Color(50, 50, 50));
        jTextField_doctorupdateenterid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));
        jTextField_doctorupdateenterid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField_doctorupdateenteridMouseClicked(evt);
            }
        });

        jButton_doctorupdatefetch.setBackground(new java.awt.Color(45, 120, 230));
        jButton_doctorupdatefetch.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jButton_doctorupdatefetch.setForeground(new java.awt.Color(255, 255, 255));
        jButton_doctorupdatefetch.setText("FETCH");
        jButton_doctorupdatefetch.setAlignmentY(0.0F);
        jButton_doctorupdatefetch.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(45, 120, 230), 3)));
        jButton_doctorupdatefetch.setMaximumSize(new java.awt.Dimension(100, 30));
        jButton_doctorupdatefetch.setMinimumSize(new java.awt.Dimension(100, 30));
        jButton_doctorupdatefetch.setPreferredSize(new java.awt.Dimension(100, 30));
        jButton_doctorupdatefetch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_doctorupdatefetchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_doctorupdateLayout = new javax.swing.GroupLayout(jPanel_doctorupdate);
        jPanel_doctorupdate.setLayout(jPanel_doctorupdateLayout);
        jPanel_doctorupdateLayout.setHorizontalGroup(
            jPanel_doctorupdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_doctorupdateLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton_doctorupdateupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(jButton_doctorupdatereset, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_doctorupdateLayout.createSequentialGroup()
                .addGroup(jPanel_doctorupdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel_doctorupdateLayout.createSequentialGroup()
                        .addGap(250, 250, 250)
                        .addGroup(jPanel_doctorupdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel_doctorupdateLayout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextField_doctorupdateemail, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel_doctorupdateLayout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextField_doctorupdatephone, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel_doctorupdateLayout.createSequentialGroup()
                                .addGroup(jPanel_doctorupdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7))
                                .addGap(18, 152, Short.MAX_VALUE)
                                .addGroup(jPanel_doctorupdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField_doctorupdateid, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField_doctorupdatename, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField_doctorupdatespecializedin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel_doctorupdateLayout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addGap(75, 75, 75)
                                .addComponent(jTextField_doctorupdateenterid, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton_doctorupdatefetch, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel_doctorupdateLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel38)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(250, 250, 250))
        );
        jPanel_doctorupdateLayout.setVerticalGroup(
            jPanel_doctorupdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_doctorupdateLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel38)
                .addGap(50, 50, 50)
                .addGroup(jPanel_doctorupdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(jTextField_doctorupdateenterid)
                    .addComponent(jButton_doctorupdatefetch, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel_doctorupdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField_doctorupdateid))
                .addGap(35, 35, 35)
                .addGroup(jPanel_doctorupdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField_doctorupdatename))
                .addGap(35, 35, 35)
                .addGroup(jPanel_doctorupdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField_doctorupdatespecializedin))
                .addGap(35, 35, 35)
                .addGroup(jPanel_doctorupdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jTextField_doctorupdatephone))
                .addGap(35, 35, 35)
                .addGroup(jPanel_doctorupdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jTextField_doctorupdateemail))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                .addGroup(jPanel_doctorupdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_doctorupdatereset, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_doctorupdateupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50))
        );

        jTabbedPane1.addTab("UPDATE RECORD", jPanel_doctorupdate);

        jPanel_doctorview.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jPanel_doctorview.setMaximumSize(new java.awt.Dimension(1180, 680));
        jPanel_doctorview.setMinimumSize(new java.awt.Dimension(1180, 680));
        jPanel_doctorview.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel_doctorviewMouseClicked(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel31.setText("Enter keyword");

        jTextField_doctorviewenterkey.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_doctorviewenterkey.setForeground(new java.awt.Color(50, 50, 50));
        jTextField_doctorviewenterkey.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));
        jTextField_doctorviewenterkey.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_doctorviewenterkeyKeyReleased(evt);
            }
        });

        jTable_doctorview.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTable_doctorview.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NAME", "SPECIALIZED IN", "PHONE", "EMAIL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_doctorview.setSelectionBackground(new java.awt.Color(45, 120, 230));
        jScrollPane2.setViewportView(jTable_doctorview);

        jButton_doctorviewdelete.setBackground(new java.awt.Color(45, 120, 230));
        jButton_doctorviewdelete.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jButton_doctorviewdelete.setForeground(new java.awt.Color(255, 255, 255));
        jButton_doctorviewdelete.setText("DELETE");
        jButton_doctorviewdelete.setAlignmentY(0.0F);
        jButton_doctorviewdelete.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(45, 120, 230), 3)));
        jButton_doctorviewdelete.setMaximumSize(new java.awt.Dimension(100, 35));
        jButton_doctorviewdelete.setMinimumSize(new java.awt.Dimension(100, 35));
        jButton_doctorviewdelete.setPreferredSize(new java.awt.Dimension(100, 35));
        jButton_doctorviewdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_doctorviewdeleteActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        jLabel18.setText("View Doctor");

        jButton_doctorviewexport.setBackground(new java.awt.Color(45, 120, 230));
        jButton_doctorviewexport.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jButton_doctorviewexport.setForeground(new java.awt.Color(255, 255, 255));
        jButton_doctorviewexport.setText("Export");
        jButton_doctorviewexport.setAlignmentY(0.0F);
        jButton_doctorviewexport.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(45, 120, 230), 3)));
        jButton_doctorviewexport.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton_doctorviewexport.setMaximumSize(new java.awt.Dimension(100, 35));
        jButton_doctorviewexport.setMinimumSize(new java.awt.Dimension(100, 35));
        jButton_doctorviewexport.setPreferredSize(new java.awt.Dimension(100, 35));
        jButton_doctorviewexport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_doctorviewexportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_doctorviewLayout = new javax.swing.GroupLayout(jPanel_doctorview);
        jPanel_doctorview.setLayout(jPanel_doctorviewLayout);
        jPanel_doctorviewLayout.setHorizontalGroup(
            jPanel_doctorviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_doctorviewLayout.createSequentialGroup()
                .addContainerGap(1023, Short.MAX_VALUE)
                .addComponent(jButton_doctorviewdelete, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
            .addGroup(jPanel_doctorviewLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel_doctorviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_doctorviewLayout.createSequentialGroup()
                        .addComponent(jLabel31)
                        .addGap(75, 75, 75)
                        .addComponent(jTextField_doctorviewenterkey, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50))
                    .addGroup(jPanel_doctorviewLayout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_doctorviewexport, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50))))
            .addGroup(jPanel_doctorviewLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel_doctorviewLayout.setVerticalGroup(
            jPanel_doctorviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_doctorviewLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel_doctorviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jButton_doctorviewexport, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(jPanel_doctorviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField_doctorviewenterkey)
                    .addComponent(jButton_doctorviewdelete, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("VIEW RECORD", jPanel_doctorview);

        jPanel1.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 1180, 670));

        jLabel_doctorclose.setFont(new java.awt.Font("Gill Sans MT", 0, 20)); // NOI18N
        jLabel_doctorclose.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_doctorclose.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_doctorclose.setText("X");
        jLabel_doctorclose.setAlignmentY(0.0F);
        jLabel_doctorclose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_doctorcloseMouseClicked(evt);
            }
        });
        jPanel1.add(jLabel_doctorclose, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 0, 40, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setSize(new java.awt.Dimension(1200, 750));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    MysqlConnection mc = new MysqlConnection();
    
    public void genId(){
        //TD00
        try{
            ResultSet rs = mc.getData("SELECT id FROM doctor ORDER BY id DESC LIMIT 1");
		if(rs.next()){
			String idval = rs.getString("id");
			int ln = idval.length();
			String stxt = idval.substring(0, 2);
			String snum = idval.substring(2, ln);
                        String num = String.format("%0" + snum.length() + "d", Integer.parseInt(snum) + 1);
			sid = stxt + num;
		}
		else{
			sid = "TD01";
		}
	}
	catch(Exception exc){
		JOptionPane.showMessageDialog(null, exc);
	}
    }
    
    public void setId(){
        int ln = sid.length();
        String stxt = sid.substring(0, 2);
	String snum = sid.substring(2, ln);
	String num = String.format("%0" + snum.length() + "d", Integer.parseInt(snum) + 1);
	nxtsid = stxt + num;
    }
    
    public void excelExport(){
        XSSFWorkbook workbook = new XSSFWorkbook();
        XSSFSheet sheet = workbook.createSheet("Doctors Detail");
        try{
            ResultSet rs = mc.getData("SELECT id, name, specialized_in, phone, email FROM doctor");
            Map<String, Object[]> data = new TreeMap<String, Object[]>();
            data.put("1", new Object[]{"ID", "NAME", "SPECIALIZED IN", "PHONE", "EMAIL"});
            String srow = "2";
            while(rs.next()){
                data.put(srow, new Object[]{rs.getString("id"), rs.getString("name"), rs.getString("specialized_in"), rs.getString("phone"), rs.getString("email")});
                srow += "1";
            }
            Set<String> keyset = data.keySet();
            int rownum = 0;
            for(String key : keyset){
                Row row = sheet.createRow(rownum++);
                Object[] objArr = data.get(key);
                int cellnum = 0;
                for(Object obj : objArr){
                    Cell cell = row.createCell(cellnum++);
                    if(obj instanceof String){
                        cell.setCellValue((String)obj);
                    }
                    else if(obj instanceof Integer){
                        cell.setCellValue((Integer)obj);
                    }
                }
            }
            FileOutputStream out = new FileOutputStream(new File("C:\\Users\\Samson\\Desktop\\doctors_detail.xlsx"));
            workbook.write(out);
            out.close();
            JOptionPane.showMessageDialog(null, "The file \"doctors_detail.xlsx\" exported to desktop successfully!");
        }
        catch(Exception exc){
            exc.printStackTrace();
        }
    }    
    
    public void excelImport(String filename){
        this.filename = filename;
        try{
            FileInputStream file = new FileInputStream(new File(this.filename));
            XSSFWorkbook workbook = new XSSFWorkbook(file);
            XSSFSheet sheet = workbook.getSheetAt(0);
            
            Iterator<Row> rowIterator = sheet.rowIterator();
            while(rowIterator.hasNext()){
                Row row = rowIterator.next();
                genId();
                Iterator<Cell> cellIterator = row.cellIterator();
                int i = 0;
                while(cellIterator.hasNext()){
                    Cell cell = cellIterator.next();
                    if(cell.getCellTypeEnum() == CellType.STRING){
                        data[i] = cell.getStringCellValue();
                        i++;
                    }
                }
                mc.putData("INSERT INTO doctor (id, name, specialized_in, phone, email) VALUES ('"+sid+"', '"+data[0]+"', '"+data[1]+"', '"+data[2]+"', '"+data[3]+"')");
            }
            file.close();
            JOptionPane.showMessageDialog(null, "The data imported successfully!");
        }
        catch(Exception exc){
            exc.printStackTrace();
        }
    }
    
    private void jLabel_doctorcloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_doctorcloseMouseClicked
        setVisible(false);
    }//GEN-LAST:event_jLabel_doctorcloseMouseClicked

    private void jPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseDragged
        int kordinatX = evt.getXOnScreen();
        int kordinatY = evt.getYOnScreen();
        this.setLocation(kordinatX - mousepX, kordinatY - mousepY);
    }//GEN-LAST:event_jPanel1MouseDragged

    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
        mousepX = evt.getX();
        mousepY = evt.getY();
    }//GEN-LAST:event_jPanel1MousePressed

    private void jButton_doctoraddsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_doctoraddsaveActionPerformed
        if(jTextField_doctoraddname.getText().isEmpty() || jTextField_doctoraddspecializedin.getText().isEmpty() || jTextField_doctoraddphone.getText().isEmpty() || jTextField_doctoraddemail.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill all fields!");
        }
        else{
            try{
                genId();
                setId();
                mc.putData("INSERT INTO doctor (id, name, specialized_in, phone, email) VALUES ('"+sid+"', '"+jTextField_doctoraddname.getText()+"', '"+jTextField_doctoraddspecializedin.getText()+"', '"+jTextField_doctoraddphone.getText()+"', '"+jTextField_doctoraddemail.getText()+"')");
                jTextField_doctoraddid.setText(nxtsid);
                jTextField_doctoraddname.setText(null);
                jTextField_doctoraddspecializedin.setText(null);
                jTextField_doctoraddphone.setText(null);
                jTextField_doctoraddemail.setText(null);
            JOptionPane.showMessageDialog(null, "Data added");
            }
            catch(Exception exc){
                exc.printStackTrace();
            }
        }
        DefaultTableModel dtm = (DefaultTableModel)jTable_doctorview.getModel();
        dtm.setRowCount(0);
        loadTbl();
    }//GEN-LAST:event_jButton_doctoraddsaveActionPerformed

    private void jButton_doctoraddresetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_doctoraddresetActionPerformed
        jTextField_doctoraddname.setText(null);
        jTextField_doctoraddspecializedin.setText(null);
        jTextField_doctoraddphone.setText(null);
        jTextField_doctoraddemail.setText(null);
    }//GEN-LAST:event_jButton_doctoraddresetActionPerformed

    private void jPanel_doctorviewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel_doctorviewMouseClicked
        jTable_doctorview.clearSelection();
    }//GEN-LAST:event_jPanel_doctorviewMouseClicked

    private void jTextField_doctorupdateenteridMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField_doctorupdateenteridMouseClicked
        jTextField_doctorupdateid.setText(null);
        jTextField_doctorupdatename.setText(null);
        jTextField_doctorupdatespecializedin.setText(null);
        jTextField_doctorupdatephone.setText(null);
        jTextField_doctorupdateemail.setText(null);
    }//GEN-LAST:event_jTextField_doctorupdateenteridMouseClicked

    private void jButton_doctorupdatefetchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_doctorupdatefetchActionPerformed
        try{
            ResultSet rs = mc.getData("SELECT * FROM doctor WHERE id = '"+jTextField_doctorupdateenterid.getText()+"'");
            if(rs.first()){
                jTextField_doctorupdateid.setText(rs.getString("id"));
                jTextField_doctorupdatename.setText(rs.getString("name"));
                jTextField_doctorupdatespecializedin.setText(rs.getString("specialized_in"));
                jTextField_doctorupdatephone.setText(rs.getString("phone"));
                jTextField_doctorupdateemail.setText(rs.getString("email"));
            }
            else{
                JOptionPane.showMessageDialog(null, "No data found. Please try another!");
            }
	}
	catch(Exception exc){
		JOptionPane.showMessageDialog(null, exc);
	}
    }//GEN-LAST:event_jButton_doctorupdatefetchActionPerformed

    private void jButton_doctorupdateupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_doctorupdateupdateActionPerformed
        if(jTextField_doctorupdateid.getText().isEmpty() || jTextField_doctorupdatename.getText().isEmpty() || jTextField_doctorupdatespecializedin.getText().isEmpty() || jTextField_doctorupdatephone.getText().isEmpty() || jTextField_doctorupdateemail.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill all fields!");
        }
        else{
            try{
                mc.putData("UPDATE doctor SET name = '"+jTextField_doctorupdatename.getText()+"', specialized_in = '"+jTextField_doctorupdatespecializedin.getText()+"', phone = '"+jTextField_doctorupdatephone.getText()+"', email = '"+jTextField_doctorupdateemail.getText()+"' WHERE id = '"+jTextField_doctorupdateid.getText()+"'");
                jTextField_doctorupdateenterid.setText(null);
                jTextField_doctorupdateid.setText(null);
                jTextField_doctorupdatename.setText(null);
                jTextField_doctorupdatespecializedin.setText(null);
                jTextField_doctorupdatephone.setText(null);
                jTextField_doctorupdateemail.setText(null);
                JOptionPane.showMessageDialog(null, "Data updated");
            }
            catch(Exception exc){
                exc.printStackTrace();
            }
        }
        DefaultTableModel dtm = (DefaultTableModel)jTable_doctorview.getModel();
        dtm.setRowCount(0);
        loadTbl();
    }//GEN-LAST:event_jButton_doctorupdateupdateActionPerformed

    private void jButton_doctorupdateresetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_doctorupdateresetActionPerformed
        jTextField_doctorupdateenterid.setText(null);
        jTextField_doctorupdateid.setText(null);
        jTextField_doctorupdatename.setText(null);
        jTextField_doctorupdatespecializedin.setText(null);
        jTextField_doctorupdatephone.setText(null);
        jTextField_doctorupdateemail.setText(null);
    }//GEN-LAST:event_jButton_doctorupdateresetActionPerformed

    private void jTextField_doctorviewenterkeyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_doctorviewenterkeyKeyReleased
        DefaultTableModel dtm = (DefaultTableModel)jTable_doctorview.getModel();
        String search = jTextField_doctorviewenterkey.getText();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<DefaultTableModel>(dtm);
        jTable_doctorview.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_jTextField_doctorviewenterkeyKeyReleased

    private void jButton_doctorviewdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_doctorviewdeleteActionPerformed
        int sri[] = jTable_doctorview.getSelectedRows();
        String sri_id[] = new String[sri.length];
        String condoc[] = new String[sri.length];
        DefaultTableModel dtm = (DefaultTableModel)jTable_doctorview.getModel();
        if(sri.length > 0){
            try{
                for(int i = sri.length - 1; i >= 0; i--){
                    sri_id[i] = jTable_doctorview.getModel().getValueAt(sri[i], 0).toString();
                    Statement stmt = MysqlConnection.conn().createStatement();
                    ResultSet rsci = stmt.executeQuery("SELECT consultancy.doctor FROM consultancy WHERE doctor = '"+sri_id[i]+"'");
                    if(rsci.first()){
                        condoc[i] = rsci.getString("consultancy.doctor");
                    }
                    else{
                        condoc[i] = "";
                    }
                    if(condoc[i].isEmpty()){
                        stmt.executeUpdate("DELETE FROM doctor WHERE id = '"+sri_id[i]+"'");
                        dtm.removeRow(sri[i]);
                        JOptionPane.showMessageDialog(null, "Data deleted successfully!");
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Sorry, cannot delete this doctor!");
                    }
                }
                dtm.setRowCount(0);
                loadTbl();
            }
            catch(Exception exc){
                exc.printStackTrace();
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select the row to delete data!");
        }
    }//GEN-LAST:event_jButton_doctorviewdeleteActionPerformed

    private void jButton_doctoraddreset1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_doctoraddreset1ActionPerformed
        FileFilter filter = new FileNameExtensionFilter("MS Office Documents", "xlsx");
        JFileChooser chooser = new JFileChooser();
        chooser.addChoosableFileFilter(filter);
        int returnval = chooser.showOpenDialog(null);
        if(returnval == JFileChooser.APPROVE_OPTION){
            File file = chooser.getSelectedFile();
            String fname = file.getAbsolutePath();
            excelImport(fname);
            DefaultTableModel dtm = (DefaultTableModel)jTable_doctorview.getModel();
            dtm.setRowCount(0);
            loadTbl();            
        }
    }//GEN-LAST:event_jButton_doctoraddreset1ActionPerformed

    private void jButton_doctorviewexportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_doctorviewexportActionPerformed
        excelExport();
    }//GEN-LAST:event_jButton_doctorviewexportActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DoctorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DoctorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DoctorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DoctorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DoctorGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_doctoraddreset;
    private javax.swing.JButton jButton_doctoraddreset1;
    private javax.swing.JButton jButton_doctoraddsave;
    private javax.swing.JButton jButton_doctorupdatefetch;
    private javax.swing.JButton jButton_doctorupdatereset;
    private javax.swing.JButton jButton_doctorupdateupdate;
    private javax.swing.JButton jButton_doctorviewdelete;
    private javax.swing.JButton jButton_doctorviewexport;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_doctorclose;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel_doctoradd;
    private javax.swing.JPanel jPanel_doctorupdate;
    private javax.swing.JPanel jPanel_doctorview;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable_doctorview;
    private javax.swing.JTextField jTextField_doctoraddemail;
    private javax.swing.JTextField jTextField_doctoraddid;
    private javax.swing.JTextField jTextField_doctoraddname;
    private javax.swing.JTextField jTextField_doctoraddphone;
    private javax.swing.JTextField jTextField_doctoraddspecializedin;
    private javax.swing.JTextField jTextField_doctorupdateemail;
    private javax.swing.JTextField jTextField_doctorupdateenterid;
    private javax.swing.JTextField jTextField_doctorupdateid;
    private javax.swing.JTextField jTextField_doctorupdatename;
    private javax.swing.JTextField jTextField_doctorupdatephone;
    private javax.swing.JTextField jTextField_doctorupdatespecializedin;
    private javax.swing.JTextField jTextField_doctorviewenterkey;
    // End of variables declaration//GEN-END:variables

    private void loadTbl(){
        try{
            DefaultTableModel dtm = (DefaultTableModel)jTable_doctorview.getModel();
            ResultSet rs = mc.getData("SELECT id, name, specialized_in, phone, email FROM doctor");
            while(rs.next()){
                Vector vtr = new Vector();
                vtr.add(rs.getString("id"));
                vtr.add(rs.getString("name"));
                vtr.add(rs.getString("specialized_in"));
                vtr.add(rs.getString("phone"));
                vtr.add(rs.getString("email"));
                dtm.addRow(vtr);
            }
        }
        catch(Exception exc){
            exc.printStackTrace();
        }
    }
}
