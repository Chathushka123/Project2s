/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AppPackage;


import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import java.util.TreeMap;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Row;

/**
 *
 * @author Samson
 */
public class PatientGUI extends javax.swing.JFrame {

    /**
     * Creates new form SalesGUI
     */
    int mousepX;
    int mousepY;
    int sno;
    String sid, nxtsid, filename;
    String[] data = new String[7];
    //Date[] dates = {new Date(), new Date()};
    
    public PatientGUI() {
        initComponents();
        
        loadTbl();

        sno = 1;
        sid = "";
        nxtsid = "";
        filename = "";
        jComboBox_patientaddgender.setSelectedItem(null);
        jComboBox_patientupdategender.setSelectedItem(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel_patientadd = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField_patientaddid = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField_patientaddname = new javax.swing.JTextField();
        jButton_patientaddreset = new javax.swing.JButton();
        jButton_patientaddsave = new javax.swing.JButton();
        jLabel34 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea_patientaddaddress = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jTextField_patientaddphone = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField_patientaddemail = new javax.swing.JTextField();
        jDateChooser_patientadddob = new com.toedter.calendar.JDateChooser();
        jDateChooser_patientaddjoindate = new com.toedter.calendar.JDateChooser();
        jComboBox_patientaddgender = new javax.swing.JComboBox<>();
        jButton_patientaddimport = new javax.swing.JButton();
        jPanel_patientupdate = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jTextField_patientupdateid = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTextField_patientupdatename = new javax.swing.JTextField();
        jButton_patientupdatereset = new javax.swing.JButton();
        jButton_patientupdateupdate = new javax.swing.JButton();
        jLabel35 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea_patientupdateaddress = new javax.swing.JTextArea();
        jLabel16 = new javax.swing.JLabel();
        jTextField_patientupdatephone = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jTextField_patientupdateemail = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        jTextField_patientupdateenterid = new javax.swing.JTextField();
        jButton_patientupdatefetch = new javax.swing.JButton();
        jDateChooser_patientupdatedob = new com.toedter.calendar.JDateChooser();
        jComboBox_patientupdategender = new javax.swing.JComboBox<>();
        jDateChooser_patientupdatejoindate = new com.toedter.calendar.JDateChooser();
        jPanel_patientview = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jTextField_patientviewenterkey = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_patientview = new javax.swing.JTable();
        jButton_patientviewdelete = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jButton_patientviewdelete1 = new javax.swing.JButton();
        jLabel_patientclose = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(1200, 750));
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(1200, 750));

        jPanel1.setBackground(new java.awt.Color(45, 120, 230));
        jPanel1.setMaximumSize(new java.awt.Dimension(1200, 750));
        jPanel1.setMinimumSize(new java.awt.Dimension(1200, 750));
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel1MouseDragged(evt);
            }
        });
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
        });
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel17.setBackground(new java.awt.Color(45, 120, 230));
        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("PATIENT INFORMATION");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(431, 30, 340, -1));

        jTabbedPane1.setForeground(new java.awt.Color(50, 50, 50));
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jTabbedPane1.setMaximumSize(new java.awt.Dimension(1180, 670));
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(1180, 670));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(1180, 670));

        jPanel_patientadd.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jPanel_patientadd.setMaximumSize(new java.awt.Dimension(1180, 680));
        jPanel_patientadd.setMinimumSize(new java.awt.Dimension(1180, 680));
        jPanel_patientadd.setPreferredSize(new java.awt.Dimension(1180, 680));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel2.setText("Patient ID");

        jTextField_patientaddid.setEditable(false);
        jTextField_patientaddid.setBackground(new java.awt.Color(250, 250, 250));
        jTextField_patientaddid.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_patientaddid.setForeground(new java.awt.Color(100, 100, 100));
        jTextField_patientaddid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));
        jTextField_patientaddid.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel3.setText("Patient name");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel4.setText("Date of birth");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel5.setText("Gender");

        jTextField_patientaddname.setBackground(new java.awt.Color(250, 250, 250));
        jTextField_patientaddname.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_patientaddname.setForeground(new java.awt.Color(50, 50, 50));
        jTextField_patientaddname.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));

        jButton_patientaddreset.setBackground(new java.awt.Color(45, 120, 230));
        jButton_patientaddreset.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jButton_patientaddreset.setForeground(new java.awt.Color(255, 255, 255));
        jButton_patientaddreset.setText("RESET");
        jButton_patientaddreset.setAlignmentY(0.0F);
        jButton_patientaddreset.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(45, 120, 230), 3)));
        jButton_patientaddreset.setMaximumSize(new java.awt.Dimension(100, 35));
        jButton_patientaddreset.setMinimumSize(new java.awt.Dimension(100, 35));
        jButton_patientaddreset.setPreferredSize(new java.awt.Dimension(100, 35));
        jButton_patientaddreset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_patientaddresetActionPerformed(evt);
            }
        });

        jButton_patientaddsave.setBackground(new java.awt.Color(45, 120, 230));
        jButton_patientaddsave.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jButton_patientaddsave.setForeground(new java.awt.Color(255, 255, 255));
        jButton_patientaddsave.setText("SAVE");
        jButton_patientaddsave.setAlignmentY(0.0F);
        jButton_patientaddsave.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(45, 120, 230), 3)));
        jButton_patientaddsave.setMaximumSize(new java.awt.Dimension(100, 35));
        jButton_patientaddsave.setMinimumSize(new java.awt.Dimension(100, 35));
        jButton_patientaddsave.setPreferredSize(new java.awt.Dimension(100, 35));
        jButton_patientaddsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_patientaddsaveActionPerformed(evt);
            }
        });

        jLabel34.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        jLabel34.setText("Add New Patient");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel6.setText("Join date");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel7.setText("Address");

        jTextArea_patientaddaddress.setBackground(new java.awt.Color(250, 250, 250));
        jTextArea_patientaddaddress.setColumns(20);
        jTextArea_patientaddaddress.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextArea_patientaddaddress.setForeground(new java.awt.Color(50, 50, 50));
        jTextArea_patientaddaddress.setRows(2);
        jTextArea_patientaddaddress.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));
        jScrollPane1.setViewportView(jTextArea_patientaddaddress);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel8.setText("Phone number");

        jTextField_patientaddphone.setBackground(new java.awt.Color(250, 250, 250));
        jTextField_patientaddphone.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_patientaddphone.setForeground(new java.awt.Color(50, 50, 50));
        jTextField_patientaddphone.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel9.setText("Email ID");

        jTextField_patientaddemail.setBackground(new java.awt.Color(250, 250, 250));
        jTextField_patientaddemail.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_patientaddemail.setForeground(new java.awt.Color(50, 50, 50));
        jTextField_patientaddemail.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));

        jDateChooser_patientadddob.setBackground(new java.awt.Color(250, 250, 250));
        jDateChooser_patientadddob.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));
        jDateChooser_patientadddob.setForeground(new java.awt.Color(50, 50, 50));
        jDateChooser_patientadddob.setDateFormatString("yyyy-MM-dd");
        jDateChooser_patientadddob.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jDateChooser_patientadddob.setMaxSelectableDate(new java.util.Date(253370748688000L));
        jDateChooser_patientadddob.setPreferredSize(new java.awt.Dimension(400, 27));

        jDateChooser_patientaddjoindate.setBackground(new java.awt.Color(250, 250, 250));
        jDateChooser_patientaddjoindate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));
        jDateChooser_patientaddjoindate.setForeground(new java.awt.Color(50, 50, 50));
        jDateChooser_patientaddjoindate.setDateFormatString("yyyy-MM-dd");
        jDateChooser_patientaddjoindate.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jDateChooser_patientaddjoindate.setMaximumSize(new java.awt.Dimension(400, 27));
        jDateChooser_patientaddjoindate.setMinSelectableDate(new java.util.Date(-62135785728000L));
        jDateChooser_patientaddjoindate.setMinimumSize(new java.awt.Dimension(400, 27));
        jDateChooser_patientaddjoindate.setPreferredSize(new java.awt.Dimension(400, 27));

        jComboBox_patientaddgender.setBackground(new java.awt.Color(250, 250, 250));
        jComboBox_patientaddgender.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jComboBox_patientaddgender.setForeground(new java.awt.Color(50, 50, 50));
        jComboBox_patientaddgender.setMaximumRowCount(2);
        jComboBox_patientaddgender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        jComboBox_patientaddgender.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));
        jComboBox_patientaddgender.setMaximumSize(new java.awt.Dimension(400, 27));
        jComboBox_patientaddgender.setMinimumSize(new java.awt.Dimension(400, 27));
        jComboBox_patientaddgender.setPreferredSize(new java.awt.Dimension(400, 27));
        jComboBox_patientaddgender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_patientaddgenderActionPerformed(evt);
            }
        });

        jButton_patientaddimport.setBackground(new java.awt.Color(45, 120, 230));
        jButton_patientaddimport.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jButton_patientaddimport.setForeground(new java.awt.Color(255, 255, 255));
        jButton_patientaddimport.setText("Import");
        jButton_patientaddimport.setAlignmentY(0.0F);
        jButton_patientaddimport.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(45, 120, 230), 3)));
        jButton_patientaddimport.setMaximumSize(new java.awt.Dimension(100, 35));
        jButton_patientaddimport.setMinimumSize(new java.awt.Dimension(100, 35));
        jButton_patientaddimport.setPreferredSize(new java.awt.Dimension(100, 35));
        jButton_patientaddimport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_patientaddimportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_patientaddLayout = new javax.swing.GroupLayout(jPanel_patientadd);
        jPanel_patientadd.setLayout(jPanel_patientaddLayout);
        jPanel_patientaddLayout.setHorizontalGroup(
            jPanel_patientaddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_patientaddLayout.createSequentialGroup()
                .addGroup(jPanel_patientaddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel_patientaddLayout.createSequentialGroup()
                        .addGroup(jPanel_patientaddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel_patientaddLayout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(jLabel34)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel_patientaddLayout.createSequentialGroup()
                                .addGap(250, 250, 250)
                                .addGroup(jPanel_patientaddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel_patientaddLayout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jTextField_patientaddemail, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_patientaddLayout.createSequentialGroup()
                                        .addGroup(jPanel_patientaddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel5))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel_patientaddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_patientaddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jTextField_patientaddid, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                                                .addComponent(jTextField_patientaddname, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))
                                            .addComponent(jComboBox_patientaddgender, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel_patientaddLayout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jDateChooser_patientadddob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel_patientaddLayout.createSequentialGroup()
                                        .addGroup(jPanel_patientaddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel8))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 144, Short.MAX_VALUE)
                                        .addGroup(jPanel_patientaddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextField_patientaddphone)
                                            .addComponent(jDateChooser_patientaddjoindate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(100, 100, 100)
                        .addComponent(jButton_patientaddimport, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel_patientaddLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_patientaddsave, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(jButton_patientaddreset, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(50, 50, 50))
        );
        jPanel_patientaddLayout.setVerticalGroup(
            jPanel_patientaddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_patientaddLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel_patientaddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(jButton_patientaddimport, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(jPanel_patientaddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField_patientaddid))
                .addGap(18, 18, 18)
                .addGroup(jPanel_patientaddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField_patientaddname))
                .addGap(18, 18, 18)
                .addGroup(jPanel_patientaddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jDateChooser_patientadddob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel_patientaddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_patientaddLayout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addGap(48, 48, 48)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel_patientaddLayout.createSequentialGroup()
                        .addComponent(jComboBox_patientaddgender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jDateChooser_patientaddjoindate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField_patientaddphone)
                        .addGap(21, 21, 21)))
                .addGroup(jPanel_patientaddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextField_patientaddemail))
                .addGap(40, 40, 40)
                .addGroup(jPanel_patientaddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_patientaddreset, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_patientaddsave, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50))
        );

        jTabbedPane1.addTab("ADD RECORD", jPanel_patientadd);

        jPanel_patientupdate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jPanel_patientupdate.setMaximumSize(new java.awt.Dimension(1180, 680));
        jPanel_patientupdate.setMinimumSize(new java.awt.Dimension(1180, 680));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel10.setText("Patient ID");

        jTextField_patientupdateid.setEditable(false);
        jTextField_patientupdateid.setBackground(new java.awt.Color(250, 250, 250));
        jTextField_patientupdateid.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_patientupdateid.setForeground(new java.awt.Color(100, 100, 100));
        jTextField_patientupdateid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel11.setText("Patient name");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel12.setText("Date of birth");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel13.setText("Gender");

        jTextField_patientupdatename.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_patientupdatename.setForeground(new java.awt.Color(50, 50, 50));
        jTextField_patientupdatename.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));

        jButton_patientupdatereset.setBackground(new java.awt.Color(45, 120, 230));
        jButton_patientupdatereset.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jButton_patientupdatereset.setForeground(new java.awt.Color(255, 255, 255));
        jButton_patientupdatereset.setText("RESET");
        jButton_patientupdatereset.setAlignmentY(0.0F);
        jButton_patientupdatereset.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(45, 120, 230), 3)));
        jButton_patientupdatereset.setMaximumSize(new java.awt.Dimension(100, 35));
        jButton_patientupdatereset.setMinimumSize(new java.awt.Dimension(100, 35));
        jButton_patientupdatereset.setPreferredSize(new java.awt.Dimension(100, 35));
        jButton_patientupdatereset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_patientupdateresetActionPerformed(evt);
            }
        });

        jButton_patientupdateupdate.setBackground(new java.awt.Color(45, 120, 230));
        jButton_patientupdateupdate.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jButton_patientupdateupdate.setForeground(new java.awt.Color(255, 255, 255));
        jButton_patientupdateupdate.setText("UPDATE");
        jButton_patientupdateupdate.setAlignmentY(0.0F);
        jButton_patientupdateupdate.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(45, 120, 230), 3)));
        jButton_patientupdateupdate.setMaximumSize(new java.awt.Dimension(100, 35));
        jButton_patientupdateupdate.setMinimumSize(new java.awt.Dimension(100, 35));
        jButton_patientupdateupdate.setPreferredSize(new java.awt.Dimension(100, 35));
        jButton_patientupdateupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_patientupdateupdateActionPerformed(evt);
            }
        });

        jLabel35.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        jLabel35.setText("Update Existing Patient");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel14.setText("Join date");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel15.setText("Address");

        jTextArea_patientupdateaddress.setColumns(20);
        jTextArea_patientupdateaddress.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextArea_patientupdateaddress.setForeground(new java.awt.Color(50, 50, 50));
        jTextArea_patientupdateaddress.setRows(2);
        jTextArea_patientupdateaddress.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));
        jScrollPane4.setViewportView(jTextArea_patientupdateaddress);

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel16.setText("Phone number");

        jTextField_patientupdatephone.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_patientupdatephone.setForeground(new java.awt.Color(50, 50, 50));
        jTextField_patientupdatephone.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));

        jLabel36.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel36.setText("Email ID");

        jTextField_patientupdateemail.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_patientupdateemail.setForeground(new java.awt.Color(50, 50, 50));
        jTextField_patientupdateemail.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));

        jLabel37.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel37.setText("Enter ID");

        jTextField_patientupdateenterid.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_patientupdateenterid.setForeground(new java.awt.Color(50, 50, 50));
        jTextField_patientupdateenterid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));
        jTextField_patientupdateenterid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField_patientupdateenteridMouseClicked(evt);
            }
        });
        jTextField_patientupdateenterid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_patientupdateenteridActionPerformed(evt);
            }
        });

        jButton_patientupdatefetch.setBackground(new java.awt.Color(45, 120, 230));
        jButton_patientupdatefetch.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jButton_patientupdatefetch.setForeground(new java.awt.Color(255, 255, 255));
        jButton_patientupdatefetch.setText("FETCH");
        jButton_patientupdatefetch.setAlignmentY(0.0F);
        jButton_patientupdatefetch.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(45, 120, 230), 3)));
        jButton_patientupdatefetch.setMaximumSize(new java.awt.Dimension(100, 35));
        jButton_patientupdatefetch.setMinimumSize(new java.awt.Dimension(100, 35));
        jButton_patientupdatefetch.setPreferredSize(new java.awt.Dimension(100, 35));
        jButton_patientupdatefetch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_patientupdatefetchActionPerformed(evt);
            }
        });

        jDateChooser_patientupdatedob.setBackground(new java.awt.Color(250, 250, 250));
        jDateChooser_patientupdatedob.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));
        jDateChooser_patientupdatedob.setForeground(new java.awt.Color(50, 50, 50));
        jDateChooser_patientupdatedob.setDateFormatString("yyyy-MM-dd");
        jDateChooser_patientupdatedob.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jDateChooser_patientupdatedob.setMaxSelectableDate(new java.util.Date(253370748688000L));
        jDateChooser_patientupdatedob.setPreferredSize(new java.awt.Dimension(400, 27));

        jComboBox_patientupdategender.setBackground(new java.awt.Color(250, 250, 250));
        jComboBox_patientupdategender.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jComboBox_patientupdategender.setForeground(new java.awt.Color(50, 50, 50));
        jComboBox_patientupdategender.setMaximumRowCount(2);
        jComboBox_patientupdategender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        jComboBox_patientupdategender.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));
        jComboBox_patientupdategender.setMaximumSize(new java.awt.Dimension(400, 27));
        jComboBox_patientupdategender.setMinimumSize(new java.awt.Dimension(400, 27));
        jComboBox_patientupdategender.setPreferredSize(new java.awt.Dimension(400, 27));

        jDateChooser_patientupdatejoindate.setBackground(new java.awt.Color(250, 250, 250));
        jDateChooser_patientupdatejoindate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));
        jDateChooser_patientupdatejoindate.setForeground(new java.awt.Color(50, 50, 50));
        jDateChooser_patientupdatejoindate.setDateFormatString("yyyy-MM-dd");
        jDateChooser_patientupdatejoindate.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jDateChooser_patientupdatejoindate.setMaximumSize(new java.awt.Dimension(400, 27));
        jDateChooser_patientupdatejoindate.setMinSelectableDate(new java.util.Date(-62135785728000L));
        jDateChooser_patientupdatejoindate.setMinimumSize(new java.awt.Dimension(400, 27));
        jDateChooser_patientupdatejoindate.setPreferredSize(new java.awt.Dimension(400, 27));

        javax.swing.GroupLayout jPanel_patientupdateLayout = new javax.swing.GroupLayout(jPanel_patientupdate);
        jPanel_patientupdate.setLayout(jPanel_patientupdateLayout);
        jPanel_patientupdateLayout.setHorizontalGroup(
            jPanel_patientupdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_patientupdateLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton_patientupdateupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(jButton_patientupdatereset, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_patientupdateLayout.createSequentialGroup()
                .addGroup(jPanel_patientupdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel_patientupdateLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel35)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel_patientupdateLayout.createSequentialGroup()
                        .addGap(250, 250, 250)
                        .addGroup(jPanel_patientupdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel_patientupdateLayout.createSequentialGroup()
                                .addComponent(jLabel37)
                                .addGap(75, 75, 75)
                                .addComponent(jTextField_patientupdateenterid, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton_patientupdatefetch, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel_patientupdateLayout.createSequentialGroup()
                                .addComponent(jLabel36)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextField_patientupdateemail, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel_patientupdateLayout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 144, Short.MAX_VALUE)
                                .addComponent(jTextField_patientupdatephone, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel_patientupdateLayout.createSequentialGroup()
                                .addGroup(jPanel_patientupdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel13))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel_patientupdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField_patientupdateid, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField_patientupdatename, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jDateChooser_patientupdatedob, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox_patientupdategender, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_patientupdateLayout.createSequentialGroup()
                                .addGroup(jPanel_patientupdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel15))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel_patientupdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jDateChooser_patientupdatejoindate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(250, 250, 250))
        );
        jPanel_patientupdateLayout.setVerticalGroup(
            jPanel_patientupdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_patientupdateLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel35)
                .addGap(50, 50, 50)
                .addGroup(jPanel_patientupdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(jTextField_patientupdateenterid)
                    .addComponent(jButton_patientupdatefetch, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel_patientupdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jTextField_patientupdateid))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_patientupdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jTextField_patientupdatename))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_patientupdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_patientupdateLayout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_patientupdateLayout.createSequentialGroup()
                        .addComponent(jDateChooser_patientupdatedob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox_patientupdategender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_patientupdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_patientupdateLayout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel_patientupdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel_patientupdateLayout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                                .addGroup(jPanel_patientupdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel16)
                                    .addComponent(jTextField_patientupdatephone))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel_patientupdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel36)
                                    .addComponent(jTextField_patientupdateemail))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                                .addGroup(jPanel_patientupdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton_patientupdatereset, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton_patientupdateupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(46, 46, 46))
                            .addGroup(jPanel_patientupdateLayout.createSequentialGroup()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))
                    .addComponent(jDateChooser_patientupdatejoindate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jTabbedPane1.addTab("UPDATE RECORD", jPanel_patientupdate);

        jPanel_patientview.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jPanel_patientview.setMaximumSize(new java.awt.Dimension(1180, 680));
        jPanel_patientview.setMinimumSize(new java.awt.Dimension(1180, 680));
        jPanel_patientview.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel_patientviewMouseClicked(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel31.setText("Enter keyword");

        jTextField_patientviewenterkey.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jTextField_patientviewenterkey.setForeground(new java.awt.Color(50, 50, 50));
        jTextField_patientviewenterkey.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));
        jTextField_patientviewenterkey.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_patientviewenterkeyKeyReleased(evt);
            }
        });

        jTable_patientview.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTable_patientview.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NAME", "DOB", "GENDER", "JOIN DATE", "ADDRESS", "PHONE", "EMAIL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_patientview.setSelectionBackground(new java.awt.Color(45, 120, 230));
        jScrollPane2.setViewportView(jTable_patientview);
        if (jTable_patientview.getColumnModel().getColumnCount() > 0) {
            jTable_patientview.getColumnModel().getColumn(0).setMinWidth(70);
            jTable_patientview.getColumnModel().getColumn(0).setPreferredWidth(70);
            jTable_patientview.getColumnModel().getColumn(0).setMaxWidth(70);
            jTable_patientview.getColumnModel().getColumn(1).setMinWidth(150);
            jTable_patientview.getColumnModel().getColumn(1).setPreferredWidth(150);
            jTable_patientview.getColumnModel().getColumn(1).setMaxWidth(150);
            jTable_patientview.getColumnModel().getColumn(2).setMinWidth(100);
            jTable_patientview.getColumnModel().getColumn(2).setPreferredWidth(100);
            jTable_patientview.getColumnModel().getColumn(2).setMaxWidth(100);
            jTable_patientview.getColumnModel().getColumn(3).setMinWidth(75);
            jTable_patientview.getColumnModel().getColumn(3).setPreferredWidth(75);
            jTable_patientview.getColumnModel().getColumn(3).setMaxWidth(75);
            jTable_patientview.getColumnModel().getColumn(4).setMinWidth(100);
            jTable_patientview.getColumnModel().getColumn(4).setPreferredWidth(100);
            jTable_patientview.getColumnModel().getColumn(4).setMaxWidth(100);
            jTable_patientview.getColumnModel().getColumn(6).setMinWidth(100);
            jTable_patientview.getColumnModel().getColumn(6).setPreferredWidth(100);
            jTable_patientview.getColumnModel().getColumn(6).setMaxWidth(100);
            jTable_patientview.getColumnModel().getColumn(7).setMinWidth(225);
            jTable_patientview.getColumnModel().getColumn(7).setPreferredWidth(225);
            jTable_patientview.getColumnModel().getColumn(7).setMaxWidth(225);
        }

        jButton_patientviewdelete.setBackground(new java.awt.Color(45, 120, 230));
        jButton_patientviewdelete.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jButton_patientviewdelete.setForeground(new java.awt.Color(255, 255, 255));
        jButton_patientviewdelete.setText("DELETE");
        jButton_patientviewdelete.setAlignmentY(0.0F);
        jButton_patientviewdelete.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(45, 120, 230), 3)));
        jButton_patientviewdelete.setMaximumSize(new java.awt.Dimension(100, 35));
        jButton_patientviewdelete.setMinimumSize(new java.awt.Dimension(100, 35));
        jButton_patientviewdelete.setPreferredSize(new java.awt.Dimension(100, 35));
        jButton_patientviewdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_patientviewdeleteActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        jLabel18.setText("View Patient");

        jButton_patientviewdelete1.setBackground(new java.awt.Color(45, 120, 230));
        jButton_patientviewdelete1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jButton_patientviewdelete1.setForeground(new java.awt.Color(255, 255, 255));
        jButton_patientviewdelete1.setText("Export");
        jButton_patientviewdelete1.setAlignmentY(0.0F);
        jButton_patientviewdelete1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(45, 120, 230), 3)));
        jButton_patientviewdelete1.setMaximumSize(new java.awt.Dimension(100, 35));
        jButton_patientviewdelete1.setMinimumSize(new java.awt.Dimension(100, 35));
        jButton_patientviewdelete1.setPreferredSize(new java.awt.Dimension(100, 35));
        jButton_patientviewdelete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_patientviewdelete1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_patientviewLayout = new javax.swing.GroupLayout(jPanel_patientview);
        jPanel_patientview.setLayout(jPanel_patientviewLayout);
        jPanel_patientviewLayout.setHorizontalGroup(
            jPanel_patientviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_patientviewLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(jPanel_patientviewLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel_patientviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_patientviewLayout.createSequentialGroup()
                        .addComponent(jLabel31)
                        .addGap(75, 75, 75)
                        .addComponent(jTextField_patientviewenterkey, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel18))
                .addGap(520, 520, 520)
                .addGroup(jPanel_patientviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton_patientviewdelete1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_patientviewdelete, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        jPanel_patientviewLayout.setVerticalGroup(
            jPanel_patientviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_patientviewLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel_patientviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jButton_patientviewdelete1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(jPanel_patientviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField_patientviewenterkey)
                    .addComponent(jButton_patientviewdelete, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("VIEW RECORD", jPanel_patientview);

        jPanel1.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 1180, 670));

        jLabel_patientclose.setFont(new java.awt.Font("Gill Sans MT", 0, 20)); // NOI18N
        jLabel_patientclose.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_patientclose.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_patientclose.setText("X");
        jLabel_patientclose.setAlignmentY(0.0F);
        jLabel_patientclose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_patientcloseMouseClicked(evt);
            }
        });
        jPanel1.add(jLabel_patientclose, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 0, 40, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setSize(new java.awt.Dimension(1200, 750));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    MysqlConnection mc = new MysqlConnection();
    
    public void genId(){
        //TP0000
        try{
            ResultSet rs = mc.getData("SELECT id FROM patient ORDER BY id DESC LIMIT 1");
		if(rs.next()){
			String idval = rs.getString("id");
			int ln = idval.length();
			String stxt = idval.substring(0, 2);
			String snum = idval.substring(2, ln);
                        String num = String.format("%0" + snum.length() + "d", Integer.parseInt(snum) + 1);
			sid = stxt + num;
		}
		else{
			sid = "TP0001";
		}
	}
	catch(Exception exc){
		JOptionPane.showMessageDialog(null, exc);
	}
    }
    
    public void setId(){
        int ln = sid.length();
        String stxt = sid.substring(0, 2);
	String snum = sid.substring(2, ln);
	String num = String.format("%0" + snum.length() + "d", Integer.parseInt(snum) + 1);
	nxtsid = stxt + num;
    }
    
    public void excelExport(){
        XSSFWorkbook workbook = new XSSFWorkbook();
        XSSFSheet sheet = workbook.createSheet("Patients Detail");
        try{
            ResultSet rs = mc.getData("SELECT id, name, dob, gender, join_date, address, phone, email FROM patient");
            Map<String, Object[]> data = new TreeMap<String, Object[]>();
            data.put("1", new Object[]{"ID", "NAME", "DOB", "GENDER", "JOIN DATE", "ADDRESS", "PHONE", "EMAIL"});
            String srow = "2";
            while(rs.next()){
                data.put(srow, new Object[]{rs.getString("id"), rs.getString("name"), rs.getString("dob"), rs.getString("gender"), rs.getString("join_date"), rs.getString("address"), rs.getString("phone"), rs.getString("email")});
                srow += "1";
            }
            Set<String> keyset = data.keySet();
            int rownum = 0;
            for(String key : keyset){
                Row row = sheet.createRow(rownum++);
                Object[] objArr = data.get(key);
                int cellnum = 0;
                for(Object obj : objArr){
                    Cell cell = row.createCell(cellnum++);
                    if(obj instanceof String){
                        cell.setCellValue((String)obj);
                    }
                    else if(obj instanceof Integer){
                        cell.setCellValue((Integer)obj);
                    }
                }
            }
            FileOutputStream out = new FileOutputStream(new File("C:\\Users\\Samson\\Desktop\\patient_details.xlsx"));
            workbook.write(out);
            out.close();
            JOptionPane.showMessageDialog(null, "The file \"patients_detail.xlsx\" exported to desktop successfully!");
        }
        catch(Exception exc){
            exc.printStackTrace();
        }
    }
    
    public void excelImport(String filename){
        this.filename = filename;
        try{
            FileInputStream file = new FileInputStream(new File(this.filename));
            XSSFWorkbook workbook = new XSSFWorkbook(file);
            XSSFSheet sheet = workbook.getSheetAt(0);
            
            Iterator<Row> rowIterator = sheet.rowIterator();
            while(rowIterator.hasNext()){
                Row row = rowIterator.next();
                genId();
                Iterator<Cell> cellIterator = row.cellIterator();
                int i = 0;
                while(cellIterator.hasNext()){
                    Cell cell = cellIterator.next();
                    if(cell.getCellTypeEnum() == CellType.STRING){
                        data[i] = cell.getStringCellValue();
                        i++;
                    }
                }
                mc.putData("INSERT INTO patient (id, name, dob, gender, join_date, address, phone, email) VALUES ('"+sid+"', '"+data[0]+"', '"+data[1]+"', '"+data[2]+"', '"+data[3]+"', '"+data[4]+"', '"+data[5]+"', '"+data[6]+"')");
            }
            file.close();
            JOptionPane.showMessageDialog(null, "The data imported successfully!");
        }
        catch(Exception exc){
            exc.printStackTrace();
        }
    }    
    
    private void jLabel_patientcloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_patientcloseMouseClicked
        setVisible(false);
    }//GEN-LAST:event_jLabel_patientcloseMouseClicked

    private void jPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseDragged
        int kordinatX = evt.getXOnScreen();
        int kordinatY = evt.getYOnScreen();
        this.setLocation(kordinatX - mousepX, kordinatY - mousepY);
    }//GEN-LAST:event_jPanel1MouseDragged

    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
        mousepX = evt.getX();
        mousepY = evt.getY();
    }//GEN-LAST:event_jPanel1MousePressed

    private void jButton_patientaddsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_patientaddsaveActionPerformed
        if(jTextField_patientaddname.getText().isEmpty() || ((JTextField)jDateChooser_patientadddob.getDateEditor().getUiComponent()).getText().isEmpty() || jComboBox_patientaddgender.getSelectedItem().toString().isEmpty() || ((JTextField)jDateChooser_patientaddjoindate.getDateEditor().getUiComponent()).getText().isEmpty() || jTextArea_patientaddaddress.getText().isEmpty() || jTextField_patientaddphone.getText().isEmpty() || jTextField_patientaddemail.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill all fields!");
        }
        else{
            try{
                genId();
                setId();
                mc.putData("INSERT INTO patient (id, name, dob, gender, join_date, address, phone, email) VALUES ('"+sid+"', '"+jTextField_patientaddname.getText()+"', '"+((JTextField)jDateChooser_patientadddob.getDateEditor().getUiComponent()).getText()+"', '"+jComboBox_patientaddgender.getSelectedItem().toString()+"', '"+((JTextField)jDateChooser_patientaddjoindate.getDateEditor().getUiComponent()).getText()+"', '"+jTextArea_patientaddaddress.getText()+"', '"+jTextField_patientaddphone.getText()+"', '"+jTextField_patientaddemail.getText()+"')");
                jTextField_patientaddid.setText(nxtsid);
                jTextField_patientaddname.setText(null);
                ((JTextField)jDateChooser_patientadddob.getDateEditor().getUiComponent()).setText(null);
                jComboBox_patientaddgender.setSelectedItem(null);
                ((JTextField)jDateChooser_patientaddjoindate.getDateEditor().getUiComponent()).setText(null);
                jTextArea_patientaddaddress.setText(null);
                jTextField_patientaddphone.setText(null);
                jTextField_patientaddemail.setText(null);
            JOptionPane.showMessageDialog(null, "Data added");
            }
            catch(Exception exc){
                exc.printStackTrace();
            }
        }
        DefaultTableModel dtm = (DefaultTableModel)jTable_patientview.getModel();
        dtm.setRowCount(0);
        loadTbl();
    }//GEN-LAST:event_jButton_patientaddsaveActionPerformed

    private void jButton_patientaddresetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_patientaddresetActionPerformed
        jTextField_patientaddname.setText(null);
        ((JTextField)jDateChooser_patientadddob.getDateEditor().getUiComponent()).setText(null);
        jComboBox_patientaddgender.setSelectedItem(null);
        ((JTextField)jDateChooser_patientaddjoindate.getDateEditor().getUiComponent()).setText(null);
        jTextArea_patientaddaddress.setText(null);
        jTextField_patientaddphone.setText(null);
        jTextField_patientaddemail.setText(null);        
    }//GEN-LAST:event_jButton_patientaddresetActionPerformed

    private void jButton_patientupdatefetchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_patientupdatefetchActionPerformed
        try{
            ResultSet rs = mc.getData("SELECT * FROM patient WHERE id = '"+jTextField_patientupdateenterid.getText()+"'");
            if(rs.first()){
                jTextField_patientupdateid.setText(rs.getString("id"));
                jTextField_patientupdatename.setText(rs.getString("name"));
                ((JTextField)jDateChooser_patientupdatedob.getDateEditor().getUiComponent()).setText(rs.getString("dob"));
                jComboBox_patientupdategender.setSelectedItem(rs.getString("gender"));
                ((JTextField)jDateChooser_patientupdatejoindate.getDateEditor().getUiComponent()).setText(rs.getString("join_date"));
                jTextArea_patientupdateaddress.setText(rs.getString("address"));
                jTextField_patientupdatephone.setText(rs.getString("phone"));
                jTextField_patientupdateemail.setText(rs.getString("email"));
            }
            else{
                JOptionPane.showMessageDialog(null, "No data found. Please try another!");
            }
	}
	catch(Exception exc){
		JOptionPane.showMessageDialog(null, exc);
	}
    }//GEN-LAST:event_jButton_patientupdatefetchActionPerformed

    private void jButton_patientupdateupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_patientupdateupdateActionPerformed
        if(jTextField_patientupdateid.getText().isEmpty() || jTextField_patientupdatename.getText().isEmpty() || ((JTextField)jDateChooser_patientupdatedob.getDateEditor().getUiComponent()).getText().isEmpty() || jComboBox_patientupdategender.getSelectedItem().toString().isEmpty() || ((JTextField)jDateChooser_patientupdatejoindate.getDateEditor().getUiComponent()).getText().isEmpty() || jTextArea_patientupdateaddress.getText().isEmpty() || jTextField_patientupdatephone.getText().isEmpty() || jTextField_patientupdateemail.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill all fields!");
        }
        else{
            try{
                mc.putData("UPDATE patient SET name = '"+jTextField_patientupdatename.getText()+"', dob = '"+((JTextField)jDateChooser_patientupdatedob.getDateEditor().getUiComponent()).getText()+"', gender = '"+jComboBox_patientupdategender.getSelectedItem().toString()+"', dob = '"+((JTextField)jDateChooser_patientupdatejoindate.getDateEditor().getUiComponent()).getText()+"', address = '"+jTextArea_patientupdateaddress.getText()+"', phone = '"+jTextField_patientupdatephone.getText()+"', email = '"+jTextField_patientupdateemail.getText()+"' WHERE id = '"+jTextField_patientupdateid.getText()+"'");
                jTextField_patientupdateenterid.setText(null);
                jTextField_patientupdateid.setText(null);
                jTextField_patientupdatename.setText(null);
                ((JTextField)jDateChooser_patientupdatedob.getDateEditor().getUiComponent()).setText(null);
                jComboBox_patientupdategender.setSelectedItem(null);
                ((JTextField)jDateChooser_patientupdatejoindate.getDateEditor().getUiComponent()).setText(null);
                jTextArea_patientupdateaddress.setText(null);
                jTextField_patientupdatephone.setText(null);
                jTextField_patientupdateemail.setText(null);
                JOptionPane.showMessageDialog(null, "Data updated");
            }
            catch(Exception exc){
                exc.printStackTrace();
            }
        }
        DefaultTableModel dtm = (DefaultTableModel)jTable_patientview.getModel();
        dtm.setRowCount(0);
        loadTbl();
    }//GEN-LAST:event_jButton_patientupdateupdateActionPerformed

    private void jButton_patientupdateresetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_patientupdateresetActionPerformed
        jTextField_patientupdateenterid.setText(null);
        jTextField_patientupdateid.setText(null);
        jTextField_patientupdatename.setText(null);
        ((JTextField)jDateChooser_patientupdatedob.getDateEditor().getUiComponent()).setText(null);
        jComboBox_patientupdategender.setSelectedItem(null);
        ((JTextField)jDateChooser_patientupdatejoindate.getDateEditor().getUiComponent()).setText(null);
        jTextArea_patientupdateaddress.setText(null);
        jTextField_patientupdatephone.setText(null);
        jTextField_patientupdateemail.setText(null);
    }//GEN-LAST:event_jButton_patientupdateresetActionPerformed

    private void jButton_patientviewdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_patientviewdeleteActionPerformed
        int sri[] = jTable_patientview.getSelectedRows();
        String sri_id[] = new String[sri.length];
        String conpat[] = new String[sri.length];
        String labpat[] = new String[sri.length];
        String salpat[] = new String[sri.length];
        DefaultTableModel dtm = (DefaultTableModel)jTable_patientview.getModel();
        if(sri.length > 0){
            try{
                for(int i = sri.length - 1; i >= 0; i--){
                    sri_id[i] = jTable_patientview.getModel().getValueAt(sri[i], 0).toString();
                    Statement stmt = MysqlConnection.conn().createStatement();
                    ResultSet rsci = stmt.executeQuery("SELECT consultancy.patient FROM consultancy WHERE patient = '"+sri_id[i]+"'");
                    if(rsci.first()){
                        conpat[i] = rsci.getString("consultancy.patient");
                    }
                    else{
                        conpat[i] = "";
                    }
                    ResultSet rsli = stmt.executeQuery("SELECT lab.patient FROM lab WHERE patient = '"+sri_id[i]+"'");
                    if(rsli.first()){
                        labpat[i] = rsli.getString("lab.patient");
                    }
                    else{
                        labpat[i] = "";
                    }
                    ResultSet rssi = stmt.executeQuery("SELECT sales.patient FROM sales WHERE patient = '"+sri_id[i]+"'");
                    if(rssi.first()){
                        salpat[i] = rssi.getString("sales.patient");
                    }
                    else{
                        salpat[i] = "";
                    }
                    if(conpat[i].isEmpty() && labpat[i].isEmpty() && salpat[i].isEmpty()){
                        stmt.executeUpdate("DELETE FROM patient WHERE id = '"+sri_id[i]+"'");
                        dtm.removeRow(sri[i]);
                        JOptionPane.showMessageDialog(null, "Data deleted successfully!");
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Sorry, cannot delete this patient!");
                    }
                }
                dtm.setRowCount(0);
                loadTbl();
            }
            catch(Exception exc){
                exc.printStackTrace();
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select the row to delete data!");
        }
    }//GEN-LAST:event_jButton_patientviewdeleteActionPerformed

    private void jTextField_patientviewenterkeyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_patientviewenterkeyKeyReleased
        DefaultTableModel dtm = (DefaultTableModel)jTable_patientview.getModel();
        String search = jTextField_patientviewenterkey.getText();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<DefaultTableModel>(dtm);
        jTable_patientview.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_jTextField_patientviewenterkeyKeyReleased

    private void jComboBox_patientaddgenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_patientaddgenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_patientaddgenderActionPerformed

    private void jTextField_patientupdateenteridMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField_patientupdateenteridMouseClicked
        jTextField_patientupdateid.setText(null);
        jTextField_patientupdatename.setText(null);
        ((JTextField)jDateChooser_patientupdatedob.getDateEditor().getUiComponent()).setText(null);
        jComboBox_patientupdategender.setSelectedItem(null);
        ((JTextField)jDateChooser_patientupdatejoindate.getDateEditor().getUiComponent()).setText(null);
        jTextArea_patientupdateaddress.setText(null);
        jTextField_patientupdatephone.setText(null);
        jTextField_patientupdateemail.setText(null);
    }//GEN-LAST:event_jTextField_patientupdateenteridMouseClicked

    private void jPanel_patientviewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel_patientviewMouseClicked
        jTable_patientview.clearSelection();
    }//GEN-LAST:event_jPanel_patientviewMouseClicked

    private void jTextField_patientupdateenteridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_patientupdateenteridActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_patientupdateenteridActionPerformed

    private void jButton_patientaddimportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_patientaddimportActionPerformed
        FileFilter filter = new FileNameExtensionFilter("MS Office Documents", "xlsx");
        JFileChooser chooser = new JFileChooser();
        chooser.addChoosableFileFilter(filter);
        int returnval = chooser.showOpenDialog(null);
        if(returnval == JFileChooser.APPROVE_OPTION){
            File file = chooser.getSelectedFile();
            String fname = file.getAbsolutePath();
            excelImport(fname);
            DefaultTableModel dtm = (DefaultTableModel)jTable_patientview.getModel();
            dtm.setRowCount(0);
            loadTbl();            
        }
    }//GEN-LAST:event_jButton_patientaddimportActionPerformed

    private void jButton_patientviewdelete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_patientviewdelete1ActionPerformed
        excelExport();
    }//GEN-LAST:event_jButton_patientviewdelete1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PatientGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_patientaddimport;
    private javax.swing.JButton jButton_patientaddreset;
    private javax.swing.JButton jButton_patientaddsave;
    private javax.swing.JButton jButton_patientupdatefetch;
    private javax.swing.JButton jButton_patientupdatereset;
    private javax.swing.JButton jButton_patientupdateupdate;
    private javax.swing.JButton jButton_patientviewdelete;
    private javax.swing.JButton jButton_patientviewdelete1;
    private javax.swing.JComboBox<String> jComboBox_patientaddgender;
    private javax.swing.JComboBox<String> jComboBox_patientupdategender;
    private com.toedter.calendar.JDateChooser jDateChooser_patientadddob;
    private com.toedter.calendar.JDateChooser jDateChooser_patientaddjoindate;
    private com.toedter.calendar.JDateChooser jDateChooser_patientupdatedob;
    private com.toedter.calendar.JDateChooser jDateChooser_patientupdatejoindate;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_patientclose;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel_patientadd;
    private javax.swing.JPanel jPanel_patientupdate;
    private javax.swing.JPanel jPanel_patientview;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable_patientview;
    private javax.swing.JTextArea jTextArea_patientaddaddress;
    private javax.swing.JTextArea jTextArea_patientupdateaddress;
    private javax.swing.JTextField jTextField_patientaddemail;
    private javax.swing.JTextField jTextField_patientaddid;
    private javax.swing.JTextField jTextField_patientaddname;
    private javax.swing.JTextField jTextField_patientaddphone;
    private javax.swing.JTextField jTextField_patientupdateemail;
    private javax.swing.JTextField jTextField_patientupdateenterid;
    private javax.swing.JTextField jTextField_patientupdateid;
    private javax.swing.JTextField jTextField_patientupdatename;
    private javax.swing.JTextField jTextField_patientupdatephone;
    private javax.swing.JTextField jTextField_patientviewenterkey;
    // End of variables declaration//GEN-END:variables

    private void loadTbl(){
        try{
            DefaultTableModel dtm = (DefaultTableModel)jTable_patientview.getModel();
            ResultSet rs = mc.getData("SELECT id, name, dob, gender, join_date, address, phone, email FROM patient");
            while(rs.next()){
                Vector vtr = new Vector();
                vtr.add(rs.getString("id"));
                vtr.add(rs.getString("name"));
                vtr.add(rs.getString("dob"));
                vtr.add(rs.getString("gender"));
                vtr.add(rs.getString("join_date"));
                vtr.add(rs.getString("address"));
                vtr.add(rs.getString("phone"));
                vtr.add(rs.getString("email"));
                dtm.addRow(vtr);
            }
        }
        catch(Exception exc){
            exc.printStackTrace();
        }
    }
}
